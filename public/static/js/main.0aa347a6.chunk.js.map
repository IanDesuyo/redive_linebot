{"version":3,"sources":["../node_modules/jspdf/dist sync","components/NavBar.jsx","api/Group.js","config/TableLocaliztion.js","components/GroupRecord/RecordTable.jsx","components/GroupRecord/index.jsx","api/CustomerOrder.js","components/CustomerOrder/OrderTable.jsx","components/CustomerOrder/index.jsx","components/GroupConfig/ConfigCard.jsx","components/GroupConfig/index.jsx","api/GachaPool.js","components/Admin/GachaPool/PoolList.jsx","components/Admin/GachaPool/ActionDialog.jsx","components/Admin/GachaPool/index.jsx","components/Admin/Message/SourceList.jsx","components/Admin/Message/ContentDialog.jsx","components/Admin/Message/index.jsx","components/Admin/Order/OrderTable.jsx","components/OrderDialog.jsx","api/GlobalOrder.js","components/Admin/Order/index.jsx","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","menuButton","marginRight","spacing","title","doLogin","window","liff","login","redirectUri","location","origin","pathname","NavBar","classes","React","useState","isLoggedIn","setLoggedIn","AppBar","position","className","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","onClick","logout","groupId","axios","get","name","status","put","header","actions","body","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","editRow","deleteText","cancelTooltip","saveTooltip","pagination","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","labelRowsSelect","labelRowsPerPage","labelDisplayedRows","toolbar","searchTooltip","searchPlaceholder","a","Group","result","genTableDatas","data","RowDatas","totalSpeakTimes","map","speakTimes","reduce","pre","curr","index","joinedDate","Date","joinedTS","speakDate","lastSpeakTS","no","displayName","lastSpeakDTM","getFullYear","getMonth","getDate","join","speakPercentage","Math","round","joinedDTM","RecordTable","props","columns","field","hidden","document","clientWidth","type","state","setState","useEffect","undefined","fetchSpeakRank","then","tableDatas","options","search","localization","TableLocal","GroupRecord","match","useParams","Container","Box","m","Grid","container","direction","justify","item","Alert","severity","AlertTitle","xs","sourceId","orderData","method","url","StyledContainer","withStyles","padding","renderDetail","rowData","List","replies","selfAry","Fragment","key","ListItemText","primary","reply","secondary","length","Divider","component","CustomerOrder","orderDatas","hashReplies","forEach","orderKey","push","messageType","Object","find","cusOrder","touchType","order","OrderTable","lookup","1","2","0","getOrderDatas","rowStyle","detailPanel","tooltip","render","editable","onRowUpdate","newData","oldData","dataUpdate","tableData","preState","card","minWeight","display","height","footer","marginTop","marginLeft","ConfigCard","setStatus","handle","CardContent","description","CardActions","Switch","checked","onChange","inputProps","disabled","Card","datas","config","chunks","parseInt","chunk","GridRow","sm","GroupConfig","GroupConfigData","Promise","all","GroupAPI","res","fetchData","style","catch","console","error","post","delete","useStyle","avatar","width","PoolList","poolData","Avatar","alt","src","imageUrl","3","GachaPoolAPI","rate","parseFloat","isPrincess","onRowAdd","headImage_url","star","is_princess","tag","foundIdx","findIndex","onRowDelete","filter","ActionDialog","ActionDatas","action","icon","onClose","selectedValue","open","Dialog","aria-labelledby","DialogTitle","ListItem","button","value","ListItemAvatar","Action","margin","GachaPool","setOpen","selectedAction","setSelectedAction","minWidth","grid","SourceCard","source","from","groupName","groupUrl","pictureUrl","CardHeader","subheader","size","SourceList","events","handleOpen","SourceDatas","event","userId","roomId","genSourceDatas","list","maxWidth","palette","background","paper","closeButton","right","top","grey","children","other","disableTypography","DialogContent","MuiDialogContent","RowList","message","text","address","analyzeMessage","analyzeEvent","ContentDialog","handleClose","getSourceInfo","dividers","itemData","itemSize","itemCount","Message","setEvents","currId","dialogState","setDialog","socket","webSocket","query","token","getAccessToken","something","on","handleEvent","alert","genDialogData","sourceType","dialogOpen","orders","senderName","senderIcon","isFreeAction","replyDatas","ReplyField","handleReply","handleAddReply","handleRemoveReply","alignItems","TextField","label","fullWidth","InputProps","startAdornment","InputAdornment","DialogForm","exec","initialState","JSON","parse","stringify","autoFocus","target","test","idx","FormControl","InputLabel","Select","labelId","MenuItem","DialogActions","objData","backdrop","zIndex","drawer","Order","editing","loading","setLoading","setDatas","GlobalOrderAPI","finally","OrderDialog","prototype","hasOwnProperty","call","trim","Array","isArray","func","Backdrop","CircularProgress","App","init","liffId","defaults","headers","common","objParam","URLSearchParams","has","to","needRedirect","path","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0aa347a6.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 349;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: '#00bcd4',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  const [isLoggedIn, setLoggedIn] = React.useState(window.liff.isLoggedIn()) ;\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Re:dive LineBot\r\n        </Typography>\r\n        {\r\n          !isLoggedIn\r\n          ? <Button color=\"inherit\" onClick={doLogin}>登入</Button>\r\n          : <Button color=\"inherit\" onClick={() => {doLogout(); setLoggedIn(false)}}>登出</Button>\r\n        }\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nfunction doLogin() {\r\n  window.liff.login({redirectUri:`${window.location.origin}/?reactRedirectUri=${window.location.pathname}`});\r\n}\r\n\r\nfunction doLogout() {\r\n  window.liff.logout();\r\n}\r\n\r\nexport default NavBar;","import axios from 'axios';\r\n\r\nexport default {\r\n  fetchGroupSpeakRank(groupId) {\r\n    return axios.get(`/api/Group/${groupId}/Speak/Rank`);\r\n  },\r\n\r\n  fetchGroupConfig(groupId) {\r\n    return axios.get(`/api/Group/${groupId}/Config`);\r\n  },\r\n\r\n  /**\r\n   * 取得群組設定 文案\r\n   */\r\n  fetchGroupConfigData() {\r\n    return axios.get('/api/GroupConfig');\r\n  },\r\n\r\n  /**\r\n   * 群組設定功能開關\r\n   * @param {String} groupId\r\n   * @param {String} name\r\n   * @param {Number} status 1 : on, 0 : off\r\n   */\r\n  switchGroupConfig(groupId, name, status) {\r\n    return axios.put(`/api/Group/${groupId}/Name/${name}/${status}`);\r\n  }\r\n}","export default {\r\n  header: {\r\n    actions: '操作'\r\n  },\r\n  body: {\r\n    emptyDataSourceMessage: '尚無任何資料',\r\n    addTooltip: '新增',\r\n    deleteTooltip: '刪除',\r\n    editTooltip: '修改',\r\n    editRow: {\r\n      deleteText: '確定刪除這筆資料?',\r\n      cancelTooltip: '取消',\r\n      saveTooltip: '保存',\r\n    }\r\n  },\r\n  pagination: {\r\n    firstAriaLabel: '第一頁',\r\n    firstTooltip: '第一頁',\r\n    previousAriaLabel: '上一頁',\r\n    previousTooltip: '上一頁',\r\n    nextAriaLabel: '下一頁',\r\n    nextTooltip: '下一頁',\r\n    lastAriaLabel: '最後一頁',\r\n    lastTooltip: '最後一頁',\r\n    labelRowsSelect: '筆',\r\n    labelRowsPerPage: '每頁顯示',\r\n    labelDisplayedRows: '{count} 中的 {from}~{to}'\r\n  },\r\n  toolbar: {\r\n    searchTooltip: '搜尋',\r\n    searchPlaceholder: '搜尋',\r\n  },\r\n}","import React, { useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Group from '../../api/Group';\r\nimport PropTypes from 'prop-types';\r\nimport TableLocal from '../../config/TableLocaliztion';\r\n\r\nconst RecordTable = (props) => {\r\n  const { groupId } = props;\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: '排名', field: 'no' },\r\n      { title: '姓名', field: 'name' },\r\n      { title: '說話次數', field: 'speakTimes', hidden: document.body.clientWidth <= 500 },\r\n      { title: '說話占比', field: 'speakPercentage' },\r\n      { title: '上次說話', field: 'lastSpeakDTM' },\r\n      { title: '開始記錄時間', field: 'joinedDTM', type: 'datetime', hidden: document.body.clientWidth <= 1000 },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (groupId === undefined) return ;\r\n\r\n    fetchSpeakRank(groupId)\r\n      .then(tableDatas => setState({\r\n        ...state,\r\n        data: tableDatas,\r\n      }));\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"群組說話次數排行\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      options={{ search: false }}\r\n      localization={TableLocal}\r\n    />\r\n  );\r\n}\r\n\r\nRecordTable.propTypes = {\r\n  groupId: PropTypes.string,\r\n};\r\n\r\nasync function fetchSpeakRank(groupId) {\r\n  var result = await Group.fetchGroupSpeakRank(groupId);\r\n  return genTableDatas(result.data);\r\n}\r\n\r\n/**\r\n * 計算產生表格所需資料\r\n * @param  {Array} RowDatas\r\n * @return {Array} TableDatas\r\n */\r\nfunction genTableDatas(RowDatas) {\r\n  let totalSpeakTimes = RowDatas.map(data => data.speakTimes).reduce((pre, curr) => pre + curr);\r\n\r\n  return RowDatas.map((data, index) => {\r\n    let joinedDate = new Date(data.joinedTS);\r\n    let speakDate = new Date(data.lastSpeakTS);\r\n\r\n    return {\r\n      no: index + 1,\r\n      name: data.displayName,\r\n      speakTimes: data.speakTimes,\r\n      lastSpeakDTM: data.lastSpeakTS === null ? '-' : [speakDate.getFullYear(), speakDate.getMonth() + 1, speakDate.getDate()].join('/'),\r\n      speakPercentage: Math.round(data.speakTimes / totalSpeakTimes * 100) + '%',\r\n      joinedDTM: [joinedDate.getFullYear(), joinedDate.getMonth() + 1, joinedDate.getDate()].join('/'),\r\n    };\r\n  })\r\n}\r\n\r\nexport default RecordTable;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport RecordTable from './RecordTable';\r\n\r\nconst GroupRecord = () => {\r\n  let match = useParams();\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '群組說話排行';\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box m={2}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-around\"\r\n        >\r\n          <Grid item>\r\n            <Alert severity=\"info\">\r\n              <AlertTitle>注意事項</AlertTitle>\r\n              <li>每個月1號準時清除資料並重新統計</li>\r\n            </Alert>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={12}><RecordTable groupId={match.groupId}/></Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GroupRecord;","import axios from \"axios\";\r\n\r\nexport default {\r\n  fetchOrders(sourceId) {\r\n    return axios.get(`/api/Source/${sourceId}/Customer/Orders`);\r\n  },\r\n\r\n  /**\r\n   * 修改自訂指令\r\n   * @param {String} sourceId \r\n   * @param {Object} orderData \r\n   */\r\n  updateOrder(sourceId, orderData) {\r\n    return axios({\r\n      method: 'PUT',\r\n      data: orderData,\r\n      url: `/api/Source/${sourceId}/Customer/Orders`,\r\n    });\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport CustomerOrder from '../../api/CustomerOrder';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableLocal from '../../config/TableLocaliztion';\r\n\r\nconst StyledContainer = withStyles({\r\n  root: {\r\n    padding: '10px 30px',\r\n  }\r\n})(Container);\r\n\r\nconst OrderTable = (props) => {\r\n  const { sourceId } = props;\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: '指令', field: 'order' },\r\n      { title: '觸發方式', field: 'touchType', lookup: { 1: '完全符合', 2: '關鍵字觸發' } },\r\n      { title: '狀態', field: 'status', lookup: { 0: '關閉', 1: '啟用' } },\r\n      { title: '回覆', field: 'replies', hidden: true },\r\n      { title: '金鑰', field: 'orderKey', hidden: true },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getOrderDatas(sourceId).then(result => setState(pre => {\r\n      return { ...pre, data: result };\r\n    }));\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"自訂指令列表\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      options={{ \r\n        search: false,\r\n        rowStyle: rowData => ({\r\n          backgroundColor: (rowData.status === 0) ? '#EEE' : '#FFF'\r\n        })\r\n      }}\r\n      detailPanel={[\r\n        {\r\n          tooltip: '點我看詳細',\r\n          render: renderDetail,\r\n        }\r\n      ]}\r\n      localization={TableLocal}\r\n      editable={{\r\n        onRowUpdate: (newData, oldData) => {\r\n          const dataUpdate = [...state.data];\r\n          const index = oldData.tableData.id;\r\n          dataUpdate[index] = newData;\r\n          setState(preState => {\r\n            return { ...preState, data: [...dataUpdate] }\r\n          });\r\n\r\n          return CustomerOrder.updateOrder(sourceId, newData);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderDetail(rowData) {\r\n  return (\r\n    <StyledContainer>\r\n      <Typography variant=\"h5\">回覆內容</Typography>\r\n      <List>\r\n        {\r\n          rowData.replies.map((data, index, selfAry) => (\r\n            <React.Fragment key={index}>\r\n              <ListItemText\r\n                primary={data.reply}\r\n                secondary={data.type === 'text' ? '文字' : '圖片'}\r\n              />\r\n              {index < selfAry.length - 1 ? <Divider component=\"li\" /> : null}\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n      </List>\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nOrderTable.propTypes = {\r\n  sourceId: PropTypes.string,\r\n};\r\n\r\n/**\r\n * 獲取自訂指令列表\r\n * @param {String} sourceId 來源ID\r\n */\r\nasync function getOrderDatas(sourceId) {\r\n  var { data: orderDatas } = await CustomerOrder.fetchOrders(sourceId);\r\n  var hashReplies = {};\r\n\r\n  orderDatas.forEach(data => {\r\n    hashReplies[data.orderKey] = hashReplies[data.orderKey] || [];\r\n    hashReplies[data.orderKey].push({ type: data.messageType, reply: data.reply });\r\n  });\r\n\r\n  var result = Object.keys(hashReplies).map(orderKey => {\r\n    let { cusOrder, touchType, status } = orderDatas.find(data => data.orderKey === orderKey);\r\n    return {\r\n      order: cusOrder,\r\n      touchType,\r\n      replies: hashReplies[orderKey],\r\n      status: status,\r\n      orderKey,\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport default OrderTable;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport OrderTable from './OrderTable';\r\n\r\nconst CustomerOrder = () => {\r\n  let match = useParams();\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '自訂指令管理';\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box m={2}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-around\"\r\n        >\r\n          <Grid item>\r\n            <Alert severity=\"info\">\r\n              <AlertTitle>注意事項</AlertTitle>\r\n              <li>兩個月未觸發指令進行刪除</li>\r\n              <li>相同指令、回覆，無法重複新增</li>\r\n              <li>完全符合的指令優先觸發</li>\r\n            </Alert>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={12}><OrderTable sourceId={match.sourceId} /></Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CustomerOrder;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    minWeight: 275,\r\n    display: \"grid\",\r\n    height: \"100%\",\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\",\r\n    marginLeft: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function ConfigCard(props) {\r\n  const classes = useStyles();\r\n  const [status, setStatus] = React.useState(props.status === 'Y');\r\n  const { name, handle, isLoggedIn } = props;\r\n\r\n  const handleChange = () => {\r\n    handle(name, !status);\r\n    setStatus(!status);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.footer}>\r\n        <Switch\r\n          checked={status}\r\n          onChange={isLoggedIn ? handleChange : function(){}}\r\n          color=\"primary\"\r\n          name=\"checkedB\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          disabled={!isLoggedIn}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nConfigCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  status: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  handle: PropTypes.func,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ConfigCard from './ConfigCard';\r\nimport Container from '@material-ui/core/Container';\r\nimport GroupAPI from '../../api/Group';\r\nimport { useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nconst GroupConfig = () => {\r\n  const classes = useStyles();\r\n  const isLoggedIn = window.liff.isLoggedIn();\r\n  const [state, setState] = React.useState({\r\n    GroupConfigData: [],\r\n    GroupConfig: {\"Battle\":\"Y\",\"PrincessCharacter\":\"Y\",\"CustomerOrder\":\"Y\"},\r\n  });\r\n\r\n  let match = useParams();\r\n  const { groupId } = match;\r\n\r\n  async function fetchData() {\r\n    const [GroupConfigData, GroupConfig] = await Promise.all([\r\n      GroupAPI.fetchGroupConfigData().then(res => res.data),\r\n      GroupAPI.fetchGroupConfig(groupId).then(res => res.data),\r\n    ]);\r\n\r\n    setState({\r\n      ...state,\r\n      GroupConfigData: GroupConfigData,\r\n      GroupConfig: GroupConfig,\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '功能開關設定'\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.root} style={{ marginTop : 10 }}>\r\n        <Grid container spacing={1}>\r\n          {isLoggedIn ? null : <Grid item><Alert severity=\"warning\">登入後即可進行操作！</Alert></Grid> }\r\n          <Card datas={state.GroupConfigData} config={state.GroupConfig} handle={writeConfig} isLoggedIn={isLoggedIn} />\r\n        </Grid>\r\n      </div>\r\n    </Container>\r\n  );\r\n\r\n  function writeConfig(name, status) {\r\n    return GroupAPI.switchGroupConfig(groupId, name, status ? 1 : 0);\r\n  }\r\n};\r\n\r\nconst Card = props => {\r\n  const { datas, config, handle, isLoggedIn } = props;\r\n\r\n  var chunks = [];\r\n\r\n  datas.forEach((data, index) => {\r\n    chunks[parseInt(index/3)] = chunks[parseInt(index/3)] || [];\r\n    chunks[parseInt(index/3)].push(data);\r\n  });\r\n\r\n  return chunks.map((chunk, index) => {\r\n    const GridRow = chunk.map((data, index) => (\r\n      <Grid item xs={12} sm={4} key={index}>\r\n        <ConfigCard {...data} status={config[data.name]} handle={handle} isLoggedIn={isLoggedIn} />\r\n      </Grid>\r\n    ));\r\n\r\n    return (\r\n      <Grid container item xs={12} spacing={3} key={index}>\r\n        {GridRow}\r\n      </Grid>\r\n    );\r\n  });\r\n}\r\n\r\nCard.propTypes = {\r\n  datas: PropTypes.array,\r\n  config: PropTypes.object,\r\n  handle: PropTypes.func,\r\n  isLoggedIn: PropTypes.bool,\r\n};\r\n\r\nexport default GroupConfig;","import axios from \"axios\";\r\n\r\nexport default {\r\n  fetchData() {\r\n    return axios\r\n      .get(`/api/Admin/GachaPool/Data`)\r\n      .then(res => res.data);\r\n  },\r\n\r\n  updateData(id, data) {\r\n    return axios\r\n      .put(`/api/Admin/GachaPool/Data`, {\r\n        id: id,\r\n        data: data,\r\n      })\r\n      .then(res => res.data)\r\n      .catch(console.error);\r\n  },\r\n\r\n  insertData(data) {\r\n    return axios\r\n      .post(`/api/Admin/GachaPool/Data`, { ...data })\r\n      .then(res => res.data);\r\n  },\r\n\r\n  deleteData(id) {\r\n    return axios\r\n      .delete(`/api/Admin/GachaPool/Data/${id}`)\r\n      .then(res => res.data)\r\n      .catch(console.error);\r\n  },\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GachaPoolAPI from '../../../api/GachaPool';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MaterialTable from 'material-table';\r\nimport TableLocal from '../../../config/TableLocaliztion';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  avatar: {\r\n    height: theme.spacing(5),\r\n    width: theme.spacing(5),\r\n  }\r\n}));\r\n\r\nconst PoolList = () => {\r\n  const classes = useStyle();\r\n\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      {\r\n        title: '頭像',\r\n        field: 'imageUrl',\r\n        // eslint-disable-next-line react/display-name\r\n        render: rowData => <Avatar className={classes.avatar} alt={rowData.name} src={rowData.imageUrl} />\r\n      },\r\n      { title: '編號', field: 'id', hidden: true },\r\n      { title: '名字', field: 'name' },\r\n      { title: '星數', field: 'star', lookup: { 1: 'Rare(1)', 2: 'SuperRare(2)', 3: 'UltraRare(3)' } },\r\n      { title: '機率', field: 'rate' },\r\n      { title: '是公主嗎', field: 'isPrincess', lookup: { 1: '是公主', 0: '不是公主' } },\r\n      { title: '標籤', field: 'tag' },\r\n    ],\r\n    data: [],\r\n    localization: {\r\n      ...TableLocal,\r\n      body: {\r\n        ...TableLocal.body,\r\n        addTooltip: '新增角色',\r\n        deleteTooltip: '刪除角色',\r\n      },\r\n      toolbar: {\r\n        searchPlaceholder: '輸入角色名稱',\r\n      },\r\n    }\r\n  });\r\n\r\n  async function fetchData() {\r\n    const data = await GachaPoolAPI.fetchData();\r\n    setState({\r\n      ...state,\r\n      data: data\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"卡池管理系統\"\r\n      columns={state.columns}\r\n      data={genTableData(state.data)}\r\n      localization={state.localization}\r\n      editable={{\r\n        onRowAdd: handleRowAdd,\r\n        onRowUpdate: handleRowUpdate,\r\n        onRowDelete: handleRowDelete,\r\n      }}\r\n    />\r\n  );\r\n\r\n  function handleRowUpdate(newData, oldData) {\r\n    var poolData = state.data;\r\n\r\n    // 單純更新網頁看到的資料\r\n    var foundIdx = poolData.findIndex(data => data.id === oldData.id);\r\n\r\n    poolData[foundIdx] = newData;\r\n\r\n    setState({\r\n      ...state,\r\n      data: poolData,\r\n    });\r\n\r\n    return GachaPoolAPI.updateData(newData.id, {\r\n      name: newData.name,\r\n      headImage_url: newData.imageUrl,\r\n      star: newData.star,\r\n      rate: newData.rate,\r\n      is_princess: newData.isPrincess,\r\n      tag: newData.tag,\r\n    });\r\n  }\r\n\r\n  function handleRowAdd(newData) {\r\n    return GachaPoolAPI.insertData({\r\n      name: newData.name,\r\n      headImage_url: newData.imageUrl,\r\n      star: newData.star,\r\n      rate: newData.rate,\r\n      is_princess: newData.isPrincess,\r\n      tag: newData.tag,\r\n    }).then(res => {\r\n      if (Object.keys(res).length === 0) return GachaPoolAPI.fetchData();\r\n    }).then(data => {\r\n      setState({\r\n        ...state,\r\n        data: data\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleRowDelete(oldData) {\r\n    var poolData = state.data;\r\n    // 單純更新網頁看到的資料\r\n    poolData = poolData.filter(data => data.id !== oldData.id);\r\n\r\n    setState({\r\n      ...state,\r\n      data: poolData,\r\n    });\r\n\r\n    return GachaPoolAPI.deleteData(oldData.id);\r\n  }\r\n};\r\n\r\nfunction genTableData(poolData) {\r\n  return poolData.map(data => {\r\n    data.rate = parseFloat(data.rate) + '%';\r\n    data.isPrincess = parseInt(data.isPrincess);\r\n    return data;\r\n  });\r\n}\r\n\r\nexport default PoolList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport FlareIcon from '@material-ui/icons/Flare';\r\n\r\nconst ActionDialog = props => {\r\n  const ActionDatas = [\r\n    { action: 'Pickup', display: '限時加倍', icon: <FlareIcon /> },\r\n  ];\r\n  const { onClose, selectedValue, open } = props;\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">選擇要執行的功能</DialogTitle>\r\n      <List>\r\n        {ActionDatas.map(data => (\r\n          <ListItem button onClick={() => handleListItemClick(data.action)} key={data.action}>\r\n            <ListItemAvatar>\r\n              {data.icon}\r\n            </ListItemAvatar>\r\n            <ListItemText primary={data.display} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nActionDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ActionDialog;\r\n","import React from 'react';\r\nimport PoolList from './PoolList';\r\nimport ActionDialog from './ActionDialog';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  Action: {\r\n    margin: theme.spacing(3),\r\n  }\r\n}));\r\n\r\nconst GachaPool = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedAction, setSelectedAction] = React.useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (action) => {\r\n    setOpen(false);\r\n    setSelectedAction(action);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = \"卡池管理頁面\";\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        className={classes.Action}\r\n      >\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>功能選單</Button>\r\n        </Grid>\r\n      </Grid>\r\n      <PoolList />\r\n      <ActionDialog selectedValue={selectedAction} open={open} onClose={handleClose}/>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GachaPool;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: 200,\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  grid: {\r\n    margin: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst SourceList = props => {\r\n  const classes = useStyles();\r\n  const { events, handleOpen } = props;\r\n\r\n  const SourceDatas = genSourceDatas(events);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      className={classes.grid}\r\n    >\r\n      {Object.keys(SourceDatas).map((key, index) => (\r\n        <Grid item key={index}>\r\n          <SourceCard source={SourceDatas[key]} action={handleOpen} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nfunction genSourceDatas(events) {\r\n  const result = {};\r\n\r\n  events.forEach(event => {\r\n    const { groupId, userId, roomId } = event.source;\r\n    const sourceId = (groupId || roomId) || userId;\r\n\r\n    result[sourceId] = result[sourceId] || {};\r\n    result[sourceId] = event.source;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst SourceCard = props => {\r\n  const { source, action } = props;\r\n  const classes = useStyles();\r\n  var from = '', avatar = '', title = '', id = source[`${source.type}Id`];\r\n\r\n  switch (source.type) {\r\n    case 'group':\r\n      title = source.groupName;\r\n      from = '群組';\r\n      avatar = source.groupUrl;\r\n      break;\r\n    case 'user':\r\n      title = source.displayName;\r\n      from = '個人';\r\n      avatar = source.pictureUrl;\r\n      break;\r\n    case 'room':\r\n      title = source.displayName;\r\n      from = '房間';\r\n      avatar = source.pictureUrl;\r\n      break;\r\n    default:\r\n      title = '預設';\r\n      from = '預設';\r\n      avatar = '預設';\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar className={classes.avatar} src={avatar} alt={source.type} />\r\n        }\r\n        title={title}\r\n        subheader={from}\r\n      />\r\n      <CardActions>\r\n        <Button size=\"small\" onClick={() => action(id)}>詳細</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSourceCard.propTypes = {\r\n  source: PropTypes.object.isRequired,\r\n  action: PropTypes.func.isRequired,\r\n};\r\n\r\nSourceList.propTypes = {\r\n  events: PropTypes.array.isRequired,\r\n  handleOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SourceList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: '100%',\r\n    height: 400,\r\n    maxWidth: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst RowList = props => {\r\n  const { data, index, style } = props;\r\n  const classes = useStyles();\r\n\r\n  if (data.length === 0) return null;\r\n  const event = data[index];\r\n  if (event === undefined) return null;\r\n\r\n  var { message, avatar } = analyzeEvent(event);\r\n\r\n  return (\r\n    <ListItem button style={style} key={index}>\r\n      <Avatar alt=\"頭像\" src={avatar} className={classes.avatar} />\r\n      <ListItemText primary={message} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nfunction analyzeEvent(event) {\r\n\r\n  let result = '', avatar = '無';\r\n\r\n  switch (event.type) {\r\n    case 'message':\r\n      result = analyzeMessage(event);\r\n      avatar = event.source.pictureUrl;\r\n      break;\r\n    case 'follow':\r\n      result = '加好友';\r\n      avatar = event.source.pictureUrl;\r\n      break;\r\n    case 'unfollow':\r\n      result = '封鎖';\r\n      break;\r\n    case 'join':\r\n      result = '被邀請入群';\r\n      avatar = event.source.pictureUrl;\r\n      break;\r\n    case 'leave':\r\n      result = '被踢離群組';\r\n      break;\r\n    case 'memberJoined':\r\n      result = '新成員加入';\r\n      avatar = event.source.pictureUrl;\r\n      break;\r\n    case 'memberLeft':\r\n      result = '成員離開群組';\r\n      break;\r\n    default:\r\n      result = '無法辨識';\r\n  }\r\n\r\n  return {\r\n    message: result,\r\n    avatar: avatar,\r\n  };\r\n}\r\n\r\nfunction analyzeMessage(event) {\r\n  let message = '';\r\n\r\n  switch (event.message.type) {\r\n    case 'text':\r\n      message = event.message.text;\r\n      break;\r\n    case 'image':\r\n      message = '圖片';\r\n      break;\r\n    case 'video':\r\n      message = '影片';\r\n      break;\r\n    case 'audio':\r\n      message = '聲音檔';\r\n      break;\r\n    case 'file':\r\n      message = '檔案';\r\n      break;\r\n    case 'location':\r\n      message = '地址：' + event.message.address;\r\n      break;\r\n    case 'sticker':\r\n      message = '貼圖';\r\n      break;\r\n    default:\r\n      message = '無法辨識';\r\n  }\r\n\r\n  return message;\r\n}\r\n\r\nRowList.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  style: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function ContentDialog(props) {\r\n  const { open, handleClose, datas } = props;\r\n  const classes = useStyles();\r\n  const { title } = getSourceInfo(datas);\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n      <DialogTitle onClose={handleClose}>\r\n        {title}\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <div className={classes.list}>\r\n          <FixedSizeList\r\n            height={400}\r\n            width={300}\r\n            itemData={datas}\r\n            itemSize={50}\r\n            itemCount={datas.length}\r\n          >\r\n            {RowList}\r\n          </FixedSizeList>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction getSourceInfo(datas) {\r\n  if (datas.length === 0) return {\r\n    title: '無',\r\n  }\r\n\r\n  var { source } = datas[0];\r\n  var title;\r\n\r\n  switch (source.type) {\r\n    case 'group':\r\n      title = source.groupName;\r\n      break;\r\n    case 'user':\r\n      title = source.displayName;\r\n      break;\r\n    case 'room':\r\n      title = '房間';\r\n      break;\r\n    default:\r\n      title ='未知';\r\n  }\r\n\r\n  return { title };\r\n}\r\n\r\nContentDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  datas: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport webSocket from 'socket.io-client';\r\nimport SourceList from './SourceList';\r\nimport ContentDialog from './ContentDialog';\r\n\r\nconst Message = () => {\r\n  const [events, setEvents] = React.useState([]);\r\n  const [dialogState, setDialog] = React.useState({\r\n    open: false,\r\n    data: [],\r\n    currId: null,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '管理員後台訊息管理';\r\n    let socket = webSocket('/Admin/Messages', {\r\n      query: {\r\n        token: window.liff.getAccessToken(),\r\n        something: 'test'\r\n      }\r\n    });\r\n\r\n    socket.on('newEvent', event => handleEvent(event));\r\n    socket.on('error', alert);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (dialogState.open && dialogState.currId) {\r\n      setDialog({\r\n        ...dialogState,\r\n        data: genDialogData(dialogState.currId)\r\n      });\r\n    }\r\n  }, [events]);\r\n\r\n  const handleEvent = event => {\r\n    setEvents(events => [...events, event]);\r\n  }\r\n\r\n  const handleOpen = (sourceId) => {\r\n    setDialog({\r\n      open: true,\r\n      data: genDialogData(sourceId),\r\n      currId: sourceId,\r\n    });\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setDialog({\r\n      open: false,\r\n      data: [],\r\n      currId: null,\r\n    });\r\n  }\r\n\r\n  const genDialogData = sourceId => {\r\n    var sourceType = '';\r\n    switch (sourceId[0]) {\r\n      case 'C':\r\n        sourceType = 'group';\r\n        break;\r\n      case 'R':\r\n        sourceType = 'room';\r\n        break;\r\n      case 'U':\r\n      default:\r\n        sourceType = 'user';\r\n        break;\r\n    }\r\n\r\n    return events.filter(event => event.source[`${sourceType}Id`] === sourceId && event.source.type === sourceType);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SourceList events={events} handleOpen={handleOpen} />\r\n      <ContentDialog open={dialogState.open} datas={dialogState.data} handleClose={handleClose} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport TableLocal from '../../../config/TableLocaliztion';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst OrderTable = (props) => {\r\n  const { action: dialogOpen, orders } = props;\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: '金鑰', field: 'orderKey', hidden: true },\r\n      { title: '指令', field: 'order' },\r\n      { title: '觸發方式', field: 'touchType', lookup: { 1: '全符合', 2: '關鍵字符合' } },\r\n      {\r\n        title: '發送名',\r\n        field: 'senderName',\r\n        render: rowData => (rowData.senderName || '預設'),\r\n      },\r\n      {\r\n        title: '發送頭像',\r\n        field: 'senderIcon',\r\n        // eslint-disable-next-line react/display-name\r\n        render: rowData => {\r\n          let icon = rowData.senderIcon || '預設';\r\n          let name = rowData.senderName || '預設';\r\n\r\n          return <Avatar alt={name} src={icon} />;\r\n        }\r\n      },\r\n    ],\r\n    data: []\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setState({\r\n      ...state,\r\n      data: orders,\r\n    });\r\n  }, [orders]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"全群指令管理\"\r\n      columns={state.columns}\r\n      data={genTableData(state.data)}\r\n      localization={TableLocal}\r\n      actions={[\r\n        {\r\n          icon: 'edit',\r\n          tooltip: '編輯',\r\n          onClick: (event, rowData) => dialogOpen(rowData),\r\n        },\r\n        {\r\n          icon: 'add',\r\n          tooltip: '新增指令',\r\n          isFreeAction: true,\r\n          onClick: () => dialogOpen({\r\n            order: '',\r\n            touchType: '1',\r\n            senderIcon: '',\r\n            senderName: '',\r\n            orderKey: '',\r\n            replyDatas: [{ no: 0, messageType: 'text', reply: '回覆內容' }],\r\n          }),\r\n        }\r\n      ]}\r\n    ></MaterialTable>\r\n  );\r\n};\r\n\r\nfunction genTableData(rowDatas) {\r\n  return rowDatas;\r\n}\r\n\r\nOrderTable.propTypes = {\r\n  action: PropTypes.func.isRequired,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default OrderTable;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DialogForm = props => {\r\n  const { onClose, open, exec, orderDatas } = props;\r\n  const initialState = {\r\n    order: '',\r\n    replyDatas: [],\r\n    touchType: 1,\r\n    senderName: '',\r\n    senderIcon: '',\r\n  };\r\n  const [state, setState] = useState(initialState);\r\n\r\n  React.useEffect(() => {\r\n    let datas = JSON.parse(JSON.stringify(orderDatas));\r\n\r\n    if (Object.keys(orderDatas).length !== 0) {\r\n      setState({\r\n        ...state,\r\n        ...datas,\r\n      });\r\n    }\r\n  }, [orderDatas, open]);\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    exec(state);\r\n    handleClose();\r\n  };\r\n\r\n  const handleOrder = event => {\r\n    setState({\r\n      ...state,\r\n      order: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleReply = (event, index) => {\r\n    var replyDatas = state.replyDatas;\r\n\r\n    replyDatas[index] = {\r\n      no: index,\r\n      messageType: getReplyType(event.target.value),\r\n      reply: event.target.value,\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      replyDatas: replyDatas,\r\n    });\r\n  };\r\n\r\n  const addReply = index => {\r\n    if (index >= 5) return;\r\n\r\n    var replyDatas = state.replyDatas;\r\n\r\n    replyDatas[index] = {\r\n      no: index,\r\n      messageType: 'text',\r\n      reply: '',\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      replyDatas: replyDatas,\r\n    });\r\n  };\r\n\r\n  const removeReply = index => {\r\n    var replyDatas = state.replyDatas\r\n      .filter((data, idx) => idx !== index)\r\n      .map((data, idx) => ({ ...data, no: idx }));\r\n\r\n    setState({\r\n      ...state,\r\n      replyDatas: replyDatas,\r\n    });\r\n  };\r\n\r\n  const handleTouchType = event => {\r\n    setState({\r\n      ...state,\r\n      touchType: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSenderName = event => {\r\n    setState({\r\n      ...state,\r\n      senderName: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSenderIcon = event => {\r\n    setState({\r\n      ...state,\r\n      senderIcon: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>指令編輯</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"order\"\r\n          label=\"指令\"\r\n          type=\"text\"\r\n          value={state.order}\r\n          onChange={handleOrder}\r\n          fullWidth\r\n        />\r\n        <ReplyField\r\n          replyDatas={state.replyDatas}\r\n          handleReply={handleReply}\r\n          handleAddReply={addReply}\r\n          handleRemoveReply={removeReply}\r\n        />\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"Trigger-label\">觸發方式</InputLabel>\r\n          <Select labelId=\"Trigger-label\" value={state.touchType} onChange={handleTouchType}>\r\n            <MenuItem value='1'>全符合</MenuItem>\r\n            <MenuItem value='2'>關鍵字符合</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          margin=\"dense\"\r\n          id=\"senderName\"\r\n          label=\"發送人\"\r\n          type=\"text\"\r\n          value={state.senderName || ''}\r\n          onChange={handleSenderName}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          id=\"senderIcon\"\r\n          label=\"發送人圖像\"\r\n          type=\"text\"\r\n          value={state.senderIcon || ''}\r\n          onChange={handleSenderIcon}\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          取消\r\n        </Button>\r\n        <Button onClick={handleSave} color=\"primary\">\r\n          保存\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst ReplyField = props => {\r\n  const { replyDatas, handleReply, handleAddReply, handleRemoveReply } = props;\r\n\r\n  return replyDatas.map((data, index) => (\r\n    <Grid container spacing={1} alignItems=\"flex-end\" key={data.no}>\r\n      <Grid item>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"回覆內容\"\r\n          type=\"text\"\r\n          value={data.reply}\r\n          onChange={(event) => handleReply(event, index)}\r\n          fullWidth\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {\r\n                  data.messageType === 'image'\r\n                    ? <ImageIcon />\r\n                    : <MessageIcon />\r\n                }\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        {\r\n          index === 0\r\n            ? <AddCircleOutlineIcon onClick={() => handleAddReply(replyDatas.length)} />\r\n            : <RemoveCircleOutlineIcon onClick={() => handleRemoveReply(index)} />\r\n        }\r\n      </Grid>\r\n    </Grid>\r\n  ));\r\n};\r\n\r\nReplyField.propTypes = {\r\n  replyDatas: PropTypes.array.isRequired,\r\n  handleReply: PropTypes.func.isRequired,\r\n  handleAddReply: PropTypes.func.isRequired,\r\n  handleRemoveReply: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction getReplyType(reply) {\r\n  return /^https:.*?(jpg|jpeg|tiff|png)$/i.test(reply) ? 'image' : 'text';\r\n}\r\n\r\nDialogForm.propTypes = {\r\n  exec: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  orderDatas: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default DialogForm;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  fetchDatas() {\r\n    return axios.get(\"/api/Admin/GlobalOrders/Data\").then(res => res.data);\r\n  },\r\n\r\n  insertData(objData) {\r\n    return axios.post(\"/api/Admin/GlobalOrders/Data\", objData).then(res => res.data);\r\n  },\r\n\r\n  updateData(objData) {\r\n    return axios.put(\"/api/Admin/GlobalOrders/Data\", objData).then(res => res.data);\r\n  },\r\n\r\n  deleteData(orderKey) {\r\n    return axios.delete(`/api/Admin/GlobalOrders/Data/${orderKey}`).then(res => res.data);\r\n  },\r\n}\r\n","import React from 'react';\r\nimport OrderTable from './OrderTable';\r\nimport OrderDialog from '../../OrderDialog';\r\nimport GlobalOrderAPI from '../../../api/GlobalOrder';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst Order = () => {\r\n  const classes = useStyles();\r\n  const [dialogState, setDialog] = React.useState({\r\n    editing: false,\r\n    datas: {},\r\n  });\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [orders, setDatas] = React.useState([]);\r\n\r\n  const dialogOpen = datas => {\r\n    setDialog({\r\n      ...dialogState,\r\n      editing: true,\r\n      datas: datas,\r\n    });\r\n  };\r\n\r\n  const dialogClose = () => setDialog({ ...dialogState, editing: false });\r\n  const fetchData = () => GlobalOrderAPI.fetchDatas().then(setDatas).finally(() => setLoading(false));\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = \"指令管理頁面\";\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <OrderTable action={dialogOpen} orders={orders} />\r\n      <OrderDialog\r\n        open={dialogState.editing}\r\n        onClose={dialogClose}\r\n        exec={handleSave}\r\n        orderDatas={dialogState.datas} \r\n      />\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </React.Fragment>\r\n  );\r\n\r\n  function handleSave(orderData) {\r\n\r\n    var action = '' ;\r\n    if (!Object.prototype.hasOwnProperty.call(orderData, 'orderKey') || orderData.orderKey.trim() === '') {\r\n      action = 'insert' ;\r\n    } else {\r\n      action = 'update' ;\r\n    }\r\n\r\n    if (orderData.order === undefined || orderData.order === '') return ;\r\n    if (!Array.isArray(orderData.replyDatas)) return;\r\n    orderData.replyDatas = orderData.replyDatas.filter(data => data.reply !== '');\r\n\r\n    var func = null;\r\n\r\n    if (action === 'insert') {\r\n      func = GlobalOrderAPI.insertData;\r\n    } else if (action === 'update') {\r\n      func = GlobalOrderAPI.updateData;\r\n    }\r\n    setLoading(true);\r\n\r\n    return func(orderData).then(fetchData);\r\n  }\r\n};\r\n\r\nexport default Order;","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport GroupRecord from './components/GroupRecord';\r\nimport CustomerOrder from './components/CustomerOrder';\r\nimport GroupConfig from './components/GroupConfig';\r\nimport GachaPool from './components/Admin/GachaPool';\r\nimport Message from './components/Admin/Message';\r\nimport Order from './components/Admin/Order';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const { liff } = window;\r\n    axios\r\n      .get('/send-id')\r\n      .then(res => res.data)\r\n      .then(data => liff.init({ liffId: data.id }))\r\n      .then(() => {\r\n\r\n        if (liff.isLoggedIn()) {\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${liff.getAccessToken()}`;\r\n        }\r\n        setLoading(false);\r\n      })\r\n  }, []);\r\n\r\n  if (loading) return (\r\n    <Backdrop className={classes.backdrop} open={true}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      <Router>\r\n        {needRedirect()}\r\n        <Switch>\r\n          <Route path='/Group/:groupId/Record' component={GroupRecord} />\r\n          <Route path='/Source/:sourceId/Customer/Orders' component={CustomerOrder} />\r\n          <Route path='/Group/:groupId/Config' component={GroupConfig} />\r\n          <Route path='/Admin/GachaPool' component={GachaPool} />\r\n          <Route path='/Admin/GlobalOrder' component={Order} />\r\n          <Route path='/Admin/Messages' component={Message} />\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction needRedirect() {\r\n  const objParam = new URLSearchParams(window.location.search);\r\n  if (objParam.has('reactRedirectUri') === false) return null ;\r\n\r\n  return <Redirect to={objParam.get('reactRedirectUri')}></Redirect> ;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}