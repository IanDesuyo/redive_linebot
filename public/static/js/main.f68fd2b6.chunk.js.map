{"version":3,"sources":["../node_modules/jspdf/dist sync","components/NavBar.jsx","api/Group.js","config/TableLocaliztion.js","components/GroupRecord/RecordTable.jsx","components/GroupRecord/index.jsx","api/CustomerOrder.js","components/CustomerOrder/OrderTable.jsx","components/CustomerOrder/index.jsx","components/GroupConfig/ConfigCard.jsx","components/GroupConfig/index.jsx","api/GachaPool.js","components/Admin/GachaPool/PoolList.jsx","components/Admin/GachaPool/ActionDialog.jsx","components/Admin/GachaPool/index.jsx","components/Admin/Message/SourceList.jsx","components/Admin/Message/ContentDialog.jsx","components/Admin/Message/index.jsx","components/Admin/Order/OrderTable.jsx","components/OrderDialog.jsx","api/GlobalOrder.js","components/Admin/Order/index.jsx","api/Statistics.js","components/Home/index.jsx","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useStyles","makeStyles","theme","root","display","flexGrow","title","drawer","breakpoints","up","width","drawerWidth","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","drawerPaper","content","paddingTop","margin","maxWidth","flex","values","lg","nested","paddingLeft","doLogin","window","liff","login","redirectUri","location","origin","pathname","NavBar","props","children","classes","React","useState","isLoggedIn","setLoggedIn","useTheme","mobileOpen","setMobileOpen","oftenBoxOpen","setOftenBoxOpen","handleDrawerToggle","List","subheader","ListSubheader","component","ListItem","button","Link","to","onClick","ListItemIcon","ListItemText","primary","Divider","Collapse","in","timeout","unmountOnExit","disablePadding","className","href","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","edge","Typography","variant","Button","logout","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","groupId","axios","get","name","status","put","webhook","post","delete","message","header","actions","body","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","editRow","deleteText","cancelTooltip","saveTooltip","pagination","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","labelRowsSelect","labelRowsPerPage","labelDisplayedRows","toolbar","searchTooltip","searchPlaceholder","a","Group","result","genTableDatas","data","RowDatas","totalSpeakTimes","map","speakTimes","reduce","pre","curr","index","joinedDate","Date","joinedTS","speakDate","lastSpeakTS","no","displayName","lastSpeakDTM","getFullYear","getMonth","getDate","join","speakPercentage","Math","round","joinedDTM","RecordTable","columns","field","hidden","document","clientWidth","type","state","setState","useEffect","undefined","fetchSpeakRank","then","tableDatas","options","search","localization","TableLocal","GroupRecord","match","useParams","Container","Box","m","Grid","container","justify","item","Alert","severity","AlertTitle","xs","sourceId","orderData","method","url","StyledContainer","withStyles","padding","renderDetail","rowData","replies","selfAry","Fragment","key","reply","secondary","length","CustomerOrder","orderDatas","hashReplies","forEach","orderKey","push","messageType","Object","find","cusOrder","touchType","order","OrderTable","lookup","1","2","0","getOrderDatas","rowStyle","backgroundColor","detailPanel","tooltip","render","editable","onRowUpdate","newData","oldData","dataUpdate","tableData","preState","card","minWeight","height","footer","marginTop","ConfigCard","setStatus","handle","CardContent","description","CardActions","Switch","checked","onChange","inputProps","disabled","rowInput","marginBottom","backdrop","zIndex","dialog","minWidth","WebhookInput","DiscordWebhook","modifyTrigger","setWebhook","testBlock","setBlock","Paper","sm","TextField","label","fullWidth","value","event","target","GroupAPI","setTimeout","ConstMessageInput","WelcomeMessage","setOpen","constMessage","setMessage","Dialog","DialogTitle","DialogContent","dividers","DialogActions","Card","datas","config","chunks","parseInt","chunk","GridRow","alignItems","GroupConfig","loading","setLoading","GroupConfigData","fetchData","Promise","all","res","style","Backdrop","catch","console","error","useStyle","avatar","PoolList","poolData","Avatar","alt","src","imageUrl","3","GachaPoolAPI","rate","parseFloat","isPrincess","onRowAdd","headImage_url","star","is_princess","tag","foundIdx","findIndex","onRowDelete","filter","ActionDialog","ActionDatas","action","icon","selectedValue","aria-labelledby","ListItemAvatar","Action","GachaPool","selectedAction","setSelectedAction","grid","SourceCard","source","from","groupName","groupUrl","pictureUrl","CardHeader","size","SourceList","events","handleOpen","SourceDatas","userId","roomId","genSourceDatas","list","palette","background","closeButton","right","top","grey","other","disableTypography","MuiDialogContent","RowList","text","address","analyzeMessage","analyzeEvent","ContentDialog","handleClose","getSourceInfo","itemData","itemSize","itemCount","Message","setEvents","currId","dialogState","setDialog","socket","webSocket","query","token","getAccessToken","something","on","handleEvent","alert","genDialogData","sourceType","dialogOpen","orders","senderName","senderIcon","isFreeAction","replyDatas","ReplyField","handleReply","handleAddReply","handleRemoveReply","InputProps","startAdornment","InputAdornment","DialogForm","exec","initialState","JSON","parse","stringify","autoFocus","test","idx","FormControl","InputLabel","Select","labelId","MenuItem","objData","Order","editing","setDatas","GlobalOrderAPI","finally","OrderDialog","prototype","hasOwnProperty","call","trim","Array","isArray","func","CircularProgress","BoardCard","down","PaperChart","Information","updateDate","date","showValue","toString","strNumber","toFixed","unitNumber","EuropeRank","rankData","setRankData","StatisticsAPI","reverse","rotated","max","showLine","showTicks","valueField","argumentField","Home","GuildCount","UserCount","CustomerOrderCount","TotalSpeakTimes","onlineCount","CollectedCount","Rank","MyGuildCount","MySpeakTimes","setData","passTS","getTime","passDate","strDate","getHours","substr","getMinutes","CardData","unshift","fetchStatistics","resp","userResp","fetchUserStatistics","GachaData","GuildData","cnt","times","App","init","liffId","defaults","headers","common","objParam","URLSearchParams","has","needRedirect","path","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f68fd2b6.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 371;","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PropTypes from 'prop-types';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WebAssetIcon from '@material-ui/icons/WebAsset';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    backgroundColor: '#00bcd4',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    paddingTop: 80,\r\n    margin: '0 auto',\r\n    maxWidth: \"100%\",\r\n    flex: '1 1 100%',\r\n    [theme.breakpoints.up('lg')]: {\r\n      maxWidth: theme.breakpoints.values.lg,\r\n    },\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst NavBar = props => {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n  const [isLoggedIn, setLoggedIn] = React.useState(window.liff.isLoggedIn());\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [oftenBoxOpen, setOftenBoxOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const closeDrawer = () => setMobileOpen(false);\r\n\r\n  const drawer = (\r\n    <div>\r\n      <List\r\n        subheader={\r\n          <ListSubheader component=\"div\">\r\n            布丁機器人\r\n          </ListSubheader>\r\n        }\r\n      >\r\n        <ListItem button component={Link} to=\"/\" onClick={closeDrawer}>\r\n          <ListItemIcon><HomeIcon /></ListItemIcon>\r\n          <ListItemText primary={\"首頁\"} />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem button onClick={()=>setOftenBoxOpen(!oftenBoxOpen)}>\r\n          <ListItemIcon>\r\n            <WebAssetIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"相關連結\" />\r\n          {oftenBoxOpen ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={oftenBoxOpen} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem button className={classes.nested} component=\"a\" href=\"https://forum.gamer.com.tw/C.php?bsn=30861&snA=13556\">\r\n              <ListItemIcon>\r\n                <LanguageIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"布丁巴哈更新串\" />\r\n            </ListItem>\r\n          </List>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem button className={classes.nested} component=\"a\" href=\"https://discord.gg/Fy82rTb\">\r\n              <ListItemIcon>\r\n                <LanguageIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"布丁Discord\" />\r\n            </ListItem>\r\n          </List>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem button className={classes.nested} component=\"a\" href=\"https://www.facebook.com/LINE-%E5%B8%83%E4%B8%81%E6%A9%9F%E5%99%A8%E4%BA%BA-585322668658383\">\r\n              <ListItemIcon>\r\n                <LanguageIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"布丁FB粉絲團\" />\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n        <ListItem button component=\"a\" href=\"https://github.com/hanshino/redive_linebot\">\r\n          <ListItemIcon><GitHubIcon /></ListItemIcon>\r\n          <ListItemText primary={\"Github原始碼\"} />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {\"布丁 - 公主連結 LineBot\"}\r\n          </Typography>\r\n          {\r\n            !isLoggedIn\r\n              ? <Button color=\"inherit\" onClick={doLogin}>登入</Button>\r\n              : <Button color=\"inherit\" onClick={() => { doLogout(); setLoggedIn(false) }}>登出</Button>\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nfunction doLogin() {\r\n  window.liff.login({ redirectUri: `${window.location.origin}/?reactRedirectUri=${window.location.pathname}` });\r\n}\r\n\r\nfunction doLogout() {\r\n  window.liff.logout();\r\n}\r\n\r\nexport default NavBar;","import axios from 'axios';\r\n\r\nexport default {\r\n  fetchGroupSpeakRank(groupId) {\r\n    return axios.get(`/api/Group/${groupId}/Speak/Rank`);\r\n  },\r\n\r\n  fetchGroupConfig(groupId) {\r\n    return axios.get(`/api/Group/${groupId}/Config`);\r\n  },\r\n\r\n  /**\r\n   * 取得群組設定 文案\r\n   */\r\n  fetchGroupConfigData() {\r\n    return axios.get('/api/GroupConfig');\r\n  },\r\n\r\n  /**\r\n   * 群組設定功能開關\r\n   * @param {String} groupId\r\n   * @param {String} name\r\n   * @param {Number} status 1 : on, 0 : off\r\n   */\r\n  switchGroupConfig(groupId, name, status) {\r\n    return axios.put(`/api/Group/${groupId}/Name/${name}/${status}`);\r\n  },\r\n\r\n  setDiscordWebhook(groupId, webhook) {\r\n    return axios.post(`/api/Group/${groupId}/Discord/Webhook`, { webhook });\r\n  },\r\n\r\n  removeDiscordWebhook(groupId) {\r\n    return axios.delete(`/api/Group/${groupId}/Discord/Webhook`);\r\n  },\r\n\r\n  testDiscordWebhook(webhook) {\r\n    return axios.post(`/api/Discord/Webhook`, { webhook });\r\n  },\r\n\r\n  setWelcomeMessage(groupId, message) {\r\n    return axios.post(`/api/Group/${groupId}/WelcomeMessage`, { message });\r\n  },\r\n}","export default {\r\n  header: {\r\n    actions: '操作'\r\n  },\r\n  body: {\r\n    emptyDataSourceMessage: '尚無任何資料',\r\n    addTooltip: '新增',\r\n    deleteTooltip: '刪除',\r\n    editTooltip: '修改',\r\n    editRow: {\r\n      deleteText: '確定刪除這筆資料?',\r\n      cancelTooltip: '取消',\r\n      saveTooltip: '保存',\r\n    }\r\n  },\r\n  pagination: {\r\n    firstAriaLabel: '第一頁',\r\n    firstTooltip: '第一頁',\r\n    previousAriaLabel: '上一頁',\r\n    previousTooltip: '上一頁',\r\n    nextAriaLabel: '下一頁',\r\n    nextTooltip: '下一頁',\r\n    lastAriaLabel: '最後一頁',\r\n    lastTooltip: '最後一頁',\r\n    labelRowsSelect: '筆',\r\n    labelRowsPerPage: '每頁顯示',\r\n    labelDisplayedRows: '{count} 中的 {from}~{to}'\r\n  },\r\n  toolbar: {\r\n    searchTooltip: '搜尋',\r\n    searchPlaceholder: '搜尋',\r\n  },\r\n}","import React, { useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Group from '../../api/Group';\r\nimport PropTypes from 'prop-types';\r\nimport TableLocal from '../../config/TableLocaliztion';\r\n\r\nconst RecordTable = (props) => {\r\n  const { groupId } = props;\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: '排名', field: 'no' },\r\n      { title: '姓名', field: 'name' },\r\n      { title: '說話次數', field: 'speakTimes', hidden: document.body.clientWidth <= 500 },\r\n      { title: '說話占比', field: 'speakPercentage' },\r\n      { title: '上次說話', field: 'lastSpeakDTM' },\r\n      { title: '開始記錄時間', field: 'joinedDTM', type: 'datetime', hidden: document.body.clientWidth <= 1000 },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (groupId === undefined) return ;\r\n\r\n    fetchSpeakRank(groupId)\r\n      .then(tableDatas => setState({\r\n        ...state,\r\n        data: tableDatas,\r\n      }));\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"群組說話次數排行\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      options={{ search: false }}\r\n      localization={TableLocal}\r\n    />\r\n  );\r\n}\r\n\r\nRecordTable.propTypes = {\r\n  groupId: PropTypes.string,\r\n};\r\n\r\nasync function fetchSpeakRank(groupId) {\r\n  var result = await Group.fetchGroupSpeakRank(groupId);\r\n  return genTableDatas(result.data);\r\n}\r\n\r\n/**\r\n * 計算產生表格所需資料\r\n * @param  {Array} RowDatas\r\n * @return {Array} TableDatas\r\n */\r\nfunction genTableDatas(RowDatas) {\r\n  let totalSpeakTimes = RowDatas.map(data => data.speakTimes).reduce((pre, curr) => pre + curr);\r\n\r\n  return RowDatas.map((data, index) => {\r\n    let joinedDate = new Date(data.joinedTS);\r\n    let speakDate = new Date(data.lastSpeakTS);\r\n\r\n    return {\r\n      no: index + 1,\r\n      name: data.displayName,\r\n      speakTimes: data.speakTimes,\r\n      lastSpeakDTM: data.lastSpeakTS === null ? '-' : [speakDate.getFullYear(), speakDate.getMonth() + 1, speakDate.getDate()].join('/'),\r\n      speakPercentage: Math.round(data.speakTimes / totalSpeakTimes * 100) + '%',\r\n      joinedDTM: [joinedDate.getFullYear(), joinedDate.getMonth() + 1, joinedDate.getDate()].join('/'),\r\n    };\r\n  })\r\n}\r\n\r\nexport default RecordTable;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport RecordTable from './RecordTable';\r\n\r\nconst GroupRecord = () => {\r\n  let match = useParams();\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '群組說話排行';\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box m={2}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-around\"\r\n        >\r\n          <Grid item>\r\n            <Alert severity=\"info\">\r\n              <AlertTitle>注意事項</AlertTitle>\r\n              <li>每個月1號準時清除資料並重新統計</li>\r\n            </Alert>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={12}><RecordTable groupId={match.groupId}/></Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GroupRecord;","import axios from \"axios\";\r\n\r\nexport default {\r\n  fetchOrders(sourceId) {\r\n    return axios.get(`/api/Source/${sourceId}/Customer/Orders`);\r\n  },\r\n\r\n  /**\r\n   * 修改自訂指令\r\n   * @param {String} sourceId \r\n   * @param {Object} orderData \r\n   */\r\n  updateOrder(sourceId, orderData) {\r\n    return axios({\r\n      method: 'PUT',\r\n      data: orderData,\r\n      url: `/api/Source/${sourceId}/Customer/Orders`,\r\n    });\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport CustomerOrder from '../../api/CustomerOrder';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableLocal from '../../config/TableLocaliztion';\r\n\r\nconst StyledContainer = withStyles({\r\n  root: {\r\n    padding: '10px 30px',\r\n  }\r\n})(Container);\r\n\r\nconst OrderTable = (props) => {\r\n  const { sourceId } = props;\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: '指令', field: 'order' },\r\n      { title: '觸發方式', field: 'touchType', lookup: { 1: '完全符合', 2: '關鍵字觸發' } },\r\n      { title: '狀態', field: 'status', lookup: { 0: '關閉', 1: '啟用' } },\r\n      { title: '回覆', field: 'replies', hidden: true },\r\n      { title: '金鑰', field: 'orderKey', hidden: true },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getOrderDatas(sourceId).then(result => setState(pre => {\r\n      return { ...pre, data: result };\r\n    }));\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"自訂指令列表\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      options={{ \r\n        search: false,\r\n        rowStyle: rowData => ({\r\n          backgroundColor: (rowData.status === 0) ? '#EEE' : '#FFF'\r\n        })\r\n      }}\r\n      detailPanel={[\r\n        {\r\n          tooltip: '點我看詳細',\r\n          render: renderDetail,\r\n        }\r\n      ]}\r\n      localization={TableLocal}\r\n      editable={{\r\n        onRowUpdate: (newData, oldData) => {\r\n          const dataUpdate = [...state.data];\r\n          const index = oldData.tableData.id;\r\n          dataUpdate[index] = newData;\r\n          setState(preState => {\r\n            return { ...preState, data: [...dataUpdate] }\r\n          });\r\n\r\n          return CustomerOrder.updateOrder(sourceId, newData);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderDetail(rowData) {\r\n  return (\r\n    <StyledContainer>\r\n      <Typography variant=\"h5\">回覆內容</Typography>\r\n      <List>\r\n        {\r\n          rowData.replies.map((data, index, selfAry) => (\r\n            <React.Fragment key={index}>\r\n              <ListItemText\r\n                primary={data.reply}\r\n                secondary={data.type === 'text' ? '文字' : '圖片'}\r\n              />\r\n              {index < selfAry.length - 1 ? <Divider component=\"li\" /> : null}\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n      </List>\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nOrderTable.propTypes = {\r\n  sourceId: PropTypes.string,\r\n};\r\n\r\n/**\r\n * 獲取自訂指令列表\r\n * @param {String} sourceId 來源ID\r\n */\r\nasync function getOrderDatas(sourceId) {\r\n  var { data: orderDatas } = await CustomerOrder.fetchOrders(sourceId);\r\n  var hashReplies = {};\r\n\r\n  orderDatas.forEach(data => {\r\n    hashReplies[data.orderKey] = hashReplies[data.orderKey] || [];\r\n    hashReplies[data.orderKey].push({ type: data.messageType, reply: data.reply });\r\n  });\r\n\r\n  var result = Object.keys(hashReplies).map(orderKey => {\r\n    let { cusOrder, touchType, status } = orderDatas.find(data => data.orderKey === orderKey);\r\n    return {\r\n      order: cusOrder,\r\n      touchType,\r\n      replies: hashReplies[orderKey],\r\n      status: status,\r\n      orderKey,\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport default OrderTable;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport OrderTable from './OrderTable';\r\n\r\nconst CustomerOrder = () => {\r\n  let match = useParams();\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '自訂指令管理';\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box m={2}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-around\"\r\n        >\r\n          <Grid item>\r\n            <Alert severity=\"info\">\r\n              <AlertTitle>注意事項</AlertTitle>\r\n              <li>兩個月未觸發指令進行刪除</li>\r\n              <li>相同指令、回覆，無法重複新增</li>\r\n              <li>完全符合的指令優先觸發</li>\r\n            </Alert>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={12}><OrderTable sourceId={match.sourceId} /></Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CustomerOrder;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    minWeight: 275,\r\n    display: \"grid\",\r\n    height: \"100%\",\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\",\r\n    marginLeft: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function ConfigCard(props) {\r\n  const classes = useStyles();\r\n  const [status, setStatus] = React.useState(props.status === 'Y');\r\n  const { name, handle, isLoggedIn } = props;\r\n\r\n  const handleChange = () => {\r\n    handle(name, !status);\r\n    setStatus(!status);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.footer}>\r\n        <Switch\r\n          checked={status}\r\n          onChange={isLoggedIn ? handleChange : function(){}}\r\n          color=\"primary\"\r\n          name=\"checkedB\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          disabled={!isLoggedIn}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nConfigCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  status: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  handle: PropTypes.func,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ConfigCard from './ConfigCard';\r\nimport Container from '@material-ui/core/Container';\r\nimport GroupAPI from '../../api/Group';\r\nimport { useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  rowInput: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    paddingLeft: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    marginBottom: 0\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  dialog: {\r\n    minWidth: 320,\r\n    padding: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst GroupConfig = () => {\r\n  const classes = useStyles();\r\n  const isLoggedIn = window.liff.isLoggedIn();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    GroupConfigData: [],\r\n    GroupConfig: { \"Battle\": \"Y\", \"PrincessCharacter\": \"Y\", \"CustomerOrder\": \"Y\", \"GlobalOrder\": \"Y\", \"Gacha\": \"Y\", \"PrincessInformation\": \"Y\" },\r\n    DiscordWebhook: \"\",\r\n    WelcomeMessage: \"\",\r\n  });\r\n\r\n  let match = useParams();\r\n  const { groupId } = match;\r\n\r\n  async function fetchData() {\r\n    setLoading(true);\r\n    const [GroupConfigData, GroupConfig] = await Promise.all([\r\n      GroupAPI.fetchGroupConfigData().then(res => res.data),\r\n      GroupAPI.fetchGroupConfig(groupId).then(res => res.data),\r\n    ]);\r\n    setLoading(false);\r\n\r\n    setState({\r\n      ...state,\r\n      GroupConfigData: GroupConfigData,\r\n      GroupConfig: GroupConfig.GroupConfig,\r\n      DiscordWebhook: GroupConfig.DiscordWebhook,\r\n      WelcomeMessage: GroupConfig.WelcomeMessage,\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '群組設定'\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.root} style={{ marginTop: 10 }}>\r\n        <Grid container spacing={1}>\r\n          {isLoggedIn ? null : <Grid item><Alert severity=\"warning\">登入後即可進行操作！</Alert></Grid>}\r\n          <WebhookInput modifyTrigger={fetchData} DiscordWebhook={state.DiscordWebhook} isLoggedIn={isLoggedIn} />\r\n          <ConstMessageInput modifyTrigger={fetchData} WelcomeMessage={state.WelcomeMessage} isLoggedIn={isLoggedIn} />\r\n          <Card datas={state.GroupConfigData} config={state.GroupConfig} handle={writeConfig} isLoggedIn={isLoggedIn} />\r\n        </Grid>\r\n      </div>\r\n      <Backdrop className={classes.backdrop} open={loading} />\r\n    </Container>\r\n  );\r\n\r\n  function writeConfig(name, status) {\r\n    return GroupAPI.switchGroupConfig(groupId, name, status ? 1 : 0);\r\n  }\r\n};\r\n\r\nconst WebhookInput = props => {\r\n  let match = useParams();\r\n  const { groupId } = match;\r\n  const { DiscordWebhook, modifyTrigger, isLoggedIn } = props;\r\n  const classes = useStyles();\r\n  const [webhook, setWebhook] = React.useState(DiscordWebhook);\r\n  const [testBlock, setBlock] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setWebhook(DiscordWebhook);\r\n  }, [DiscordWebhook]);\r\n\r\n  const handleSave = () => {\r\n    GroupAPI.setDiscordWebhook(groupId, webhook).then(modifyTrigger);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    GroupAPI.removeDiscordWebhook(groupId, webhook).then(modifyTrigger);\r\n  };\r\n\r\n  const handleTest = () => {\r\n    setBlock(true);\r\n    GroupAPI.testDiscordWebhook(webhook);\r\n    setTimeout(() => setBlock(false), 10000);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.rowInput} component={Paper} spacing={2}>\r\n      <Grid container item xs={12} sm={12}>\r\n        <Grid item>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Discord Webhook 綁定\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            可將 Line 訊息，即時轉發至 Discord 指定頻道\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={9}>\r\n        <TextField\r\n          label=\"Discord Webhook\"\r\n          fullWidth\r\n          disabled={!isLoggedIn}\r\n          value={webhook}\r\n          onChange={event => setWebhook(event.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4} sm={1}>\r\n        <Button className={classes.button} disabled={testBlock} onClick={handleTest}>測試</Button>\r\n      </Grid>\r\n      <Grid item xs={4} sm={1}>\r\n        <Button className={classes.button} disabled={!isLoggedIn} color=\"primary\" onClick={handleSave}>連結</Button>\r\n      </Grid>\r\n      <Grid item xs={4} sm={1}>\r\n        <Button className={classes.button} disabled={!isLoggedIn} color=\"secondary\" onClick={handleRemove}>解除</Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nWebhookInput.propTypes = {\r\n  DiscordWebhook: PropTypes.string.isRequired,\r\n  modifyTrigger: PropTypes.func.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst ConstMessageInput = props => {\r\n  const classes = useStyles();\r\n  let match = useParams();\r\n  const { groupId } = match;\r\n  const { WelcomeMessage, modifyTrigger, isLoggedIn } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const [constMessage, setMessage] = React.useState(\"\");\r\n\r\n  const handleClickUsername = () => {\r\n    setMessage(`${constMessage} {UserName}`);\r\n  };\r\n\r\n  const handleClickGroupname = () => {\r\n    setMessage(`${constMessage} {GroupName}`);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setOpen(false);\r\n    GroupAPI.setWelcomeMessage(groupId, constMessage).then(modifyTrigger);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setMessage(WelcomeMessage);\r\n  }, [WelcomeMessage]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container className={classes.rowInput} component={Paper} spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            加入歡迎訊息\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            可設定新成員加入發送特定訊息。\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={10}>\r\n          <TextField\r\n            label=\"歡迎訊息\"\r\n            disabled\r\n            variant=\"filled\"\r\n            fullWidth\r\n            value={constMessage}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={2}>\r\n          <Button \r\n            className={classes.button} \r\n            color=\"primary\" \r\n            onClick={() => setOpen(true)}\r\n            disabled={!isLoggedIn}\r\n          >編輯</Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog className={classes.dialog} open={open} onClose={() => setOpen(false)} fullWidth>\r\n        <DialogTitle>加入歡迎訊息</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                label=\"訊息\"\r\n                fullWidth\r\n                value={constMessage}\r\n                onChange={(event) => setMessage(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleClickUsername}>使用者名稱</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleClickGroupname}>群組名稱</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)}>取消</Button>\r\n          <Button color=\"primary\" onClick={handleSave}>保存</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nConstMessageInput.propTypes = {\r\n  WelcomeMessage: PropTypes.string.isRequired,\r\n  modifyTrigger: PropTypes.func.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst Card = props => {\r\n  const { datas, config, handle, isLoggedIn } = props;\r\n\r\n  var chunks = [];\r\n\r\n  datas.forEach((data, index) => {\r\n    chunks[parseInt(index / 3)] = chunks[parseInt(index / 3)] || [];\r\n    chunks[parseInt(index / 3)].push(data);\r\n  });\r\n\r\n  return chunks.map((chunk, index) => {\r\n    const GridRow = chunk.map((data, index) => (\r\n      <Grid item xs={12} sm={4} key={index}>\r\n        <ConfigCard {...data} status={config[data.name]} handle={handle} isLoggedIn={isLoggedIn} />\r\n      </Grid>\r\n    ));\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        key={index}\r\n      >\r\n        {GridRow}\r\n      </Grid>\r\n    );\r\n  });\r\n}\r\n\r\nCard.propTypes = {\r\n  datas: PropTypes.array,\r\n  config: PropTypes.object,\r\n  handle: PropTypes.func,\r\n  isLoggedIn: PropTypes.bool,\r\n};\r\n\r\nexport default GroupConfig;","import axios from \"axios\";\r\n\r\nexport default {\r\n  fetchData() {\r\n    return axios\r\n      .get(`/api/Admin/GachaPool/Data`)\r\n      .then(res => res.data);\r\n  },\r\n\r\n  updateData(id, data) {\r\n    return axios\r\n      .put(`/api/Admin/GachaPool/Data`, {\r\n        id: id,\r\n        data: data,\r\n      })\r\n      .then(res => res.data)\r\n      .catch(console.error);\r\n  },\r\n\r\n  insertData(data) {\r\n    return axios\r\n      .post(`/api/Admin/GachaPool/Data`, { ...data })\r\n      .then(res => res.data);\r\n  },\r\n\r\n  deleteData(id) {\r\n    return axios\r\n      .delete(`/api/Admin/GachaPool/Data/${id}`)\r\n      .then(res => res.data)\r\n      .catch(console.error);\r\n  },\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GachaPoolAPI from '../../../api/GachaPool';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MaterialTable from 'material-table';\r\nimport TableLocal from '../../../config/TableLocaliztion';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  avatar: {\r\n    height: theme.spacing(5),\r\n    width: theme.spacing(5),\r\n  }\r\n}));\r\n\r\nconst PoolList = () => {\r\n  const classes = useStyle();\r\n\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      {\r\n        title: '頭像',\r\n        field: 'imageUrl',\r\n        // eslint-disable-next-line react/display-name\r\n        render: rowData => <Avatar className={classes.avatar} alt={rowData.name} src={rowData.imageUrl} />\r\n      },\r\n      { title: '編號', field: 'id', hidden: true },\r\n      { title: '名字', field: 'name' },\r\n      { title: '星數', field: 'star', lookup: { 1: 'Rare(1)', 2: 'SuperRare(2)', 3: 'UltraRare(3)' } },\r\n      { title: '機率', field: 'rate' },\r\n      { title: '是公主嗎', field: 'isPrincess', lookup: { 1: '是公主', 0: '不是公主' } },\r\n      { title: '標籤', field: 'tag' },\r\n    ],\r\n    data: [],\r\n    localization: {\r\n      ...TableLocal,\r\n      body: {\r\n        ...TableLocal.body,\r\n        addTooltip: '新增角色',\r\n        deleteTooltip: '刪除角色',\r\n      },\r\n      toolbar: {\r\n        searchPlaceholder: '輸入角色名稱',\r\n      },\r\n    }\r\n  });\r\n\r\n  async function fetchData() {\r\n    const data = await GachaPoolAPI.fetchData();\r\n    setState({\r\n      ...state,\r\n      data: data\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"卡池管理系統\"\r\n      columns={state.columns}\r\n      data={genTableData(state.data)}\r\n      localization={state.localization}\r\n      editable={{\r\n        onRowAdd: handleRowAdd,\r\n        onRowUpdate: handleRowUpdate,\r\n        onRowDelete: handleRowDelete,\r\n      }}\r\n    />\r\n  );\r\n\r\n  function handleRowUpdate(newData, oldData) {\r\n    var poolData = state.data;\r\n\r\n    // 單純更新網頁看到的資料\r\n    var foundIdx = poolData.findIndex(data => data.id === oldData.id);\r\n\r\n    poolData[foundIdx] = newData;\r\n\r\n    setState({\r\n      ...state,\r\n      data: poolData,\r\n    });\r\n\r\n    return GachaPoolAPI.updateData(newData.id, {\r\n      name: newData.name,\r\n      headImage_url: newData.imageUrl,\r\n      star: newData.star,\r\n      rate: newData.rate,\r\n      is_princess: newData.isPrincess,\r\n      tag: newData.tag,\r\n    });\r\n  }\r\n\r\n  function handleRowAdd(newData) {\r\n    return GachaPoolAPI.insertData({\r\n      name: newData.name,\r\n      headImage_url: newData.imageUrl,\r\n      star: newData.star,\r\n      rate: newData.rate,\r\n      is_princess: newData.isPrincess,\r\n      tag: newData.tag,\r\n    }).then(res => {\r\n      if (Object.keys(res).length === 0) return GachaPoolAPI.fetchData();\r\n    }).then(data => {\r\n      setState({\r\n        ...state,\r\n        data: data\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleRowDelete(oldData) {\r\n    var poolData = state.data;\r\n    // 單純更新網頁看到的資料\r\n    poolData = poolData.filter(data => data.id !== oldData.id);\r\n\r\n    setState({\r\n      ...state,\r\n      data: poolData,\r\n    });\r\n\r\n    return GachaPoolAPI.deleteData(oldData.id);\r\n  }\r\n};\r\n\r\nfunction genTableData(poolData) {\r\n  return poolData.map(data => {\r\n    data.rate = parseFloat(data.rate) + '%';\r\n    data.isPrincess = parseInt(data.isPrincess);\r\n    return data;\r\n  });\r\n}\r\n\r\nexport default PoolList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport FlareIcon from '@material-ui/icons/Flare';\r\n\r\nconst ActionDialog = props => {\r\n  const ActionDatas = [\r\n    { action: 'Pickup', display: '限時加倍', icon: <FlareIcon /> },\r\n  ];\r\n  const { onClose, selectedValue, open } = props;\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">選擇要執行的功能</DialogTitle>\r\n      <List>\r\n        {ActionDatas.map(data => (\r\n          <ListItem button onClick={() => handleListItemClick(data.action)} key={data.action}>\r\n            <ListItemAvatar>\r\n              {data.icon}\r\n            </ListItemAvatar>\r\n            <ListItemText primary={data.display} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nActionDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ActionDialog;\r\n","import React from 'react';\r\nimport PoolList from './PoolList';\r\nimport ActionDialog from './ActionDialog';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  Action: {\r\n    margin: theme.spacing(3),\r\n  }\r\n}));\r\n\r\nconst GachaPool = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedAction, setSelectedAction] = React.useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (action) => {\r\n    setOpen(false);\r\n    setSelectedAction(action);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = \"卡池管理頁面\";\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        className={classes.Action}\r\n      >\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>功能選單</Button>\r\n        </Grid>\r\n      </Grid>\r\n      <PoolList />\r\n      <ActionDialog selectedValue={selectedAction} open={open} onClose={handleClose}/>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GachaPool;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: 200,\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  grid: {\r\n    margin: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst SourceList = props => {\r\n  const classes = useStyles();\r\n  const { events, handleOpen } = props;\r\n\r\n  const SourceDatas = genSourceDatas(events);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      className={classes.grid}\r\n    >\r\n      {Object.keys(SourceDatas).map((key, index) => (\r\n        <Grid item key={index}>\r\n          <SourceCard source={SourceDatas[key]} action={handleOpen} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nfunction genSourceDatas(events) {\r\n  const result = {};\r\n\r\n  events.forEach(event => {\r\n    const { groupId, userId, roomId } = event.source;\r\n    const sourceId = (groupId || roomId) || userId;\r\n\r\n    result[sourceId] = result[sourceId] || {};\r\n    result[sourceId] = event.source;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst SourceCard = props => {\r\n  const { source, action } = props;\r\n  const classes = useStyles();\r\n  var from = '', avatar = '', title = '', id = source[`${source.type}Id`];\r\n\r\n  switch (source.type) {\r\n    case 'group':\r\n      title = source.groupName;\r\n      from = '群組';\r\n      avatar = source.groupUrl;\r\n      break;\r\n    case 'user':\r\n      title = source.displayName;\r\n      from = '個人';\r\n      avatar = source.pictureUrl;\r\n      break;\r\n    case 'room':\r\n      title = source.displayName;\r\n      from = '房間';\r\n      avatar = source.pictureUrl;\r\n      break;\r\n    default:\r\n      title = '預設';\r\n      from = '預設';\r\n      avatar = '預設';\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar className={classes.avatar} src={avatar} alt={source.type} />\r\n        }\r\n        title={title}\r\n        subheader={from}\r\n      />\r\n      <CardActions>\r\n        <Button size=\"small\" onClick={() => action(id)}>詳細</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSourceCard.propTypes = {\r\n  source: PropTypes.object.isRequired,\r\n  action: PropTypes.func.isRequired,\r\n};\r\n\r\nSourceList.propTypes = {\r\n  events: PropTypes.array.isRequired,\r\n  handleOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SourceList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: '100%',\r\n    height: 400,\r\n    maxWidth: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst RowList = props => {\r\n  const { data, index, style } = props;\r\n  const classes = useStyles();\r\n\r\n  if (data.length === 0) return null;\r\n  const event = data[index];\r\n  if (event === undefined) return null;\r\n\r\n  var { message, avatar } = analyzeEvent(event);\r\n\r\n  return (\r\n    <ListItem button style={style} key={index}>\r\n      <Avatar alt=\"頭像\" src={avatar} className={classes.avatar} />\r\n      <ListItemText primary={message} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nfunction analyzeEvent(event) {\r\n\r\n  let result = '', avatar = '無';\r\n\r\n  switch (event.type) {\r\n    case 'message':\r\n      result = analyzeMessage(event);\r\n      avatar = event.source.pictureUrl;\r\n      break;\r\n    case 'follow':\r\n      result = '加好友';\r\n      avatar = event.source.pictureUrl;\r\n      break;\r\n    case 'unfollow':\r\n      result = '封鎖';\r\n      break;\r\n    case 'join':\r\n      result = '被邀請入群';\r\n      avatar = event.source.pictureUrl;\r\n      break;\r\n    case 'leave':\r\n      result = '被踢離群組';\r\n      break;\r\n    case 'memberJoined':\r\n      result = '新成員加入';\r\n      avatar = event.source.pictureUrl;\r\n      break;\r\n    case 'memberLeft':\r\n      result = '成員離開群組';\r\n      break;\r\n    default:\r\n      result = '無法辨識';\r\n  }\r\n\r\n  return {\r\n    message: result,\r\n    avatar: avatar,\r\n  };\r\n}\r\n\r\nfunction analyzeMessage(event) {\r\n  let message = '';\r\n\r\n  switch (event.message.type) {\r\n    case 'text':\r\n      message = event.message.text;\r\n      break;\r\n    case 'image':\r\n      message = '圖片';\r\n      break;\r\n    case 'video':\r\n      message = '影片';\r\n      break;\r\n    case 'audio':\r\n      message = '聲音檔';\r\n      break;\r\n    case 'file':\r\n      message = '檔案';\r\n      break;\r\n    case 'location':\r\n      message = '地址：' + event.message.address;\r\n      break;\r\n    case 'sticker':\r\n      message = '貼圖';\r\n      break;\r\n    default:\r\n      message = '無法辨識';\r\n  }\r\n\r\n  return message;\r\n}\r\n\r\nRowList.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  style: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function ContentDialog(props) {\r\n  const { open, handleClose, datas } = props;\r\n  const classes = useStyles();\r\n  const { title } = getSourceInfo(datas);\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n      <DialogTitle onClose={handleClose}>\r\n        {title}\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <div className={classes.list}>\r\n          <FixedSizeList\r\n            height={400}\r\n            width={300}\r\n            itemData={datas}\r\n            itemSize={50}\r\n            itemCount={datas.length}\r\n          >\r\n            {RowList}\r\n          </FixedSizeList>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction getSourceInfo(datas) {\r\n  if (datas.length === 0) return {\r\n    title: '無',\r\n  }\r\n\r\n  var { source } = datas[0];\r\n  var title;\r\n\r\n  switch (source.type) {\r\n    case 'group':\r\n      title = source.groupName;\r\n      break;\r\n    case 'user':\r\n      title = source.displayName;\r\n      break;\r\n    case 'room':\r\n      title = '房間';\r\n      break;\r\n    default:\r\n      title ='未知';\r\n  }\r\n\r\n  return { title };\r\n}\r\n\r\nContentDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  datas: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport webSocket from 'socket.io-client';\r\nimport SourceList from './SourceList';\r\nimport ContentDialog from './ContentDialog';\r\n\r\nconst Message = () => {\r\n  const [events, setEvents] = React.useState([]);\r\n  const [dialogState, setDialog] = React.useState({\r\n    open: false,\r\n    data: [],\r\n    currId: null,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '管理員後台訊息管理';\r\n    let socket = webSocket('/Admin/Messages', {\r\n      query: {\r\n        token: window.liff.getAccessToken(),\r\n        something: 'test'\r\n      }\r\n    });\r\n\r\n    socket.on('newEvent', event => handleEvent(event));\r\n    socket.on('error', alert);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (dialogState.open && dialogState.currId) {\r\n      setDialog({\r\n        ...dialogState,\r\n        data: genDialogData(dialogState.currId)\r\n      });\r\n    }\r\n  }, [events]);\r\n\r\n  const handleEvent = event => {\r\n    setEvents(events => [...events, event]);\r\n  }\r\n\r\n  const handleOpen = (sourceId) => {\r\n    setDialog({\r\n      open: true,\r\n      data: genDialogData(sourceId),\r\n      currId: sourceId,\r\n    });\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setDialog({\r\n      open: false,\r\n      data: [],\r\n      currId: null,\r\n    });\r\n  }\r\n\r\n  const genDialogData = sourceId => {\r\n    var sourceType = '';\r\n    switch (sourceId[0]) {\r\n      case 'C':\r\n        sourceType = 'group';\r\n        break;\r\n      case 'R':\r\n        sourceType = 'room';\r\n        break;\r\n      case 'U':\r\n      default:\r\n        sourceType = 'user';\r\n        break;\r\n    }\r\n\r\n    return events.filter(event => event.source[`${sourceType}Id`] === sourceId && event.source.type === sourceType);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SourceList events={events} handleOpen={handleOpen} />\r\n      <ContentDialog open={dialogState.open} datas={dialogState.data} handleClose={handleClose} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport TableLocal from '../../../config/TableLocaliztion';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst OrderTable = (props) => {\r\n  const { action: dialogOpen, orders } = props;\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: '金鑰', field: 'orderKey', hidden: true },\r\n      { title: '指令', field: 'order' },\r\n      { title: '觸發方式', field: 'touchType', lookup: { 1: '全符合', 2: '關鍵字符合' } },\r\n      {\r\n        title: '發送名',\r\n        field: 'senderName',\r\n        render: rowData => (rowData.senderName || '預設'),\r\n      },\r\n      {\r\n        title: '發送頭像',\r\n        field: 'senderIcon',\r\n        // eslint-disable-next-line react/display-name\r\n        render: rowData => {\r\n          let icon = rowData.senderIcon || '預設';\r\n          let name = rowData.senderName || '預設';\r\n\r\n          return <Avatar alt={name} src={icon} />;\r\n        }\r\n      },\r\n    ],\r\n    data: []\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setState({\r\n      ...state,\r\n      data: orders,\r\n    });\r\n  }, [orders]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"全群指令管理\"\r\n      columns={state.columns}\r\n      data={genTableData(state.data)}\r\n      localization={TableLocal}\r\n      actions={[\r\n        {\r\n          icon: 'edit',\r\n          tooltip: '編輯',\r\n          onClick: (event, rowData) => dialogOpen(rowData),\r\n        },\r\n        {\r\n          icon: 'add',\r\n          tooltip: '新增指令',\r\n          isFreeAction: true,\r\n          onClick: () => dialogOpen({\r\n            order: '',\r\n            touchType: '1',\r\n            senderIcon: '',\r\n            senderName: '',\r\n            orderKey: '',\r\n            replyDatas: [{ no: 0, messageType: 'text', reply: '回覆內容' }],\r\n          }),\r\n        }\r\n      ]}\r\n    ></MaterialTable>\r\n  );\r\n};\r\n\r\nfunction genTableData(rowDatas) {\r\n  return rowDatas;\r\n}\r\n\r\nOrderTable.propTypes = {\r\n  action: PropTypes.func.isRequired,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default OrderTable;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DialogForm = props => {\r\n  const { onClose, open, exec, orderDatas } = props;\r\n  const initialState = {\r\n    order: '',\r\n    replyDatas: [],\r\n    touchType: 1,\r\n    senderName: '',\r\n    senderIcon: '',\r\n  };\r\n  const [state, setState] = useState(initialState);\r\n\r\n  React.useEffect(() => {\r\n    let datas = JSON.parse(JSON.stringify(orderDatas));\r\n\r\n    if (Object.keys(orderDatas).length !== 0) {\r\n      setState({\r\n        ...state,\r\n        ...datas,\r\n      });\r\n    }\r\n  }, [orderDatas, open]);\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    exec(state);\r\n    handleClose();\r\n  };\r\n\r\n  const handleOrder = event => {\r\n    setState({\r\n      ...state,\r\n      order: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleReply = (event, index) => {\r\n    var replyDatas = state.replyDatas;\r\n\r\n    replyDatas[index] = {\r\n      no: index,\r\n      messageType: getReplyType(event.target.value),\r\n      reply: event.target.value,\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      replyDatas: replyDatas,\r\n    });\r\n  };\r\n\r\n  const addReply = index => {\r\n    if (index >= 5) return;\r\n\r\n    var replyDatas = state.replyDatas;\r\n\r\n    replyDatas[index] = {\r\n      no: index,\r\n      messageType: 'text',\r\n      reply: '',\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      replyDatas: replyDatas,\r\n    });\r\n  };\r\n\r\n  const removeReply = index => {\r\n    var replyDatas = state.replyDatas\r\n      .filter((data, idx) => idx !== index)\r\n      .map((data, idx) => ({ ...data, no: idx }));\r\n\r\n    setState({\r\n      ...state,\r\n      replyDatas: replyDatas,\r\n    });\r\n  };\r\n\r\n  const handleTouchType = event => {\r\n    setState({\r\n      ...state,\r\n      touchType: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSenderName = event => {\r\n    setState({\r\n      ...state,\r\n      senderName: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSenderIcon = event => {\r\n    setState({\r\n      ...state,\r\n      senderIcon: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>指令編輯</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"order\"\r\n          label=\"指令\"\r\n          type=\"text\"\r\n          value={state.order}\r\n          onChange={handleOrder}\r\n          fullWidth\r\n        />\r\n        <ReplyField\r\n          replyDatas={state.replyDatas}\r\n          handleReply={handleReply}\r\n          handleAddReply={addReply}\r\n          handleRemoveReply={removeReply}\r\n        />\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"Trigger-label\">觸發方式</InputLabel>\r\n          <Select labelId=\"Trigger-label\" value={state.touchType} onChange={handleTouchType}>\r\n            <MenuItem value='1'>全符合</MenuItem>\r\n            <MenuItem value='2'>關鍵字符合</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          margin=\"dense\"\r\n          id=\"senderName\"\r\n          label=\"發送人\"\r\n          type=\"text\"\r\n          value={state.senderName || ''}\r\n          onChange={handleSenderName}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          id=\"senderIcon\"\r\n          label=\"發送人圖像\"\r\n          type=\"text\"\r\n          value={state.senderIcon || ''}\r\n          onChange={handleSenderIcon}\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          取消\r\n        </Button>\r\n        <Button onClick={handleSave} color=\"primary\">\r\n          保存\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst ReplyField = props => {\r\n  const { replyDatas, handleReply, handleAddReply, handleRemoveReply } = props;\r\n\r\n  return replyDatas.map((data, index) => (\r\n    <Grid container spacing={1} alignItems=\"flex-end\" key={data.no}>\r\n      <Grid item>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"回覆內容\"\r\n          type=\"text\"\r\n          value={data.reply}\r\n          onChange={(event) => handleReply(event, index)}\r\n          fullWidth\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {\r\n                  data.messageType === 'image'\r\n                    ? <ImageIcon />\r\n                    : <MessageIcon />\r\n                }\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        {\r\n          index === 0\r\n            ? <AddCircleOutlineIcon onClick={() => handleAddReply(replyDatas.length)} />\r\n            : <RemoveCircleOutlineIcon onClick={() => handleRemoveReply(index)} />\r\n        }\r\n      </Grid>\r\n    </Grid>\r\n  ));\r\n};\r\n\r\nReplyField.propTypes = {\r\n  replyDatas: PropTypes.array.isRequired,\r\n  handleReply: PropTypes.func.isRequired,\r\n  handleAddReply: PropTypes.func.isRequired,\r\n  handleRemoveReply: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction getReplyType(reply) {\r\n  return /^https:.*?(jpg|jpeg|tiff|png)$/i.test(reply) ? 'image' : 'text';\r\n}\r\n\r\nDialogForm.propTypes = {\r\n  exec: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  orderDatas: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default DialogForm;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  fetchDatas() {\r\n    return axios.get(\"/api/Admin/GlobalOrders/Data\").then(res => res.data);\r\n  },\r\n\r\n  insertData(objData) {\r\n    return axios.post(\"/api/Admin/GlobalOrders/Data\", objData).then(res => res.data);\r\n  },\r\n\r\n  updateData(objData) {\r\n    return axios.put(\"/api/Admin/GlobalOrders/Data\", objData).then(res => res.data);\r\n  },\r\n\r\n  deleteData(orderKey) {\r\n    return axios.delete(`/api/Admin/GlobalOrders/Data/${orderKey}`).then(res => res.data);\r\n  },\r\n}\r\n","import React from 'react';\r\nimport OrderTable from './OrderTable';\r\nimport OrderDialog from '../../OrderDialog';\r\nimport GlobalOrderAPI from '../../../api/GlobalOrder';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst Order = () => {\r\n  const classes = useStyles();\r\n  const [dialogState, setDialog] = React.useState({\r\n    editing: false,\r\n    datas: {},\r\n  });\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [orders, setDatas] = React.useState([]);\r\n\r\n  const dialogOpen = datas => {\r\n    setDialog({\r\n      ...dialogState,\r\n      editing: true,\r\n      datas: datas,\r\n    });\r\n  };\r\n\r\n  const dialogClose = () => setDialog({ ...dialogState, editing: false });\r\n  const fetchData = () => GlobalOrderAPI.fetchDatas().then(setDatas).finally(() => setLoading(false));\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = \"指令管理頁面\";\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <OrderTable action={dialogOpen} orders={orders} />\r\n      <OrderDialog\r\n        open={dialogState.editing}\r\n        onClose={dialogClose}\r\n        exec={handleSave}\r\n        orderDatas={dialogState.datas} \r\n      />\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </React.Fragment>\r\n  );\r\n\r\n  function handleSave(orderData) {\r\n\r\n    var action = '' ;\r\n    if (!Object.prototype.hasOwnProperty.call(orderData, 'orderKey') || orderData.orderKey.trim() === '') {\r\n      action = 'insert' ;\r\n    } else {\r\n      action = 'update' ;\r\n    }\r\n\r\n    if (orderData.order === undefined || orderData.order === '') return ;\r\n    if (!Array.isArray(orderData.replyDatas)) return;\r\n    orderData.replyDatas = orderData.replyDatas.filter(data => data.reply !== '');\r\n\r\n    var func = null;\r\n\r\n    if (action === 'insert') {\r\n      func = GlobalOrderAPI.insertData;\r\n    } else if (action === 'update') {\r\n      func = GlobalOrderAPI.updateData;\r\n    }\r\n    setLoading(true);\r\n\r\n    return func(orderData).then(fetchData);\r\n  }\r\n};\r\n\r\nexport default Order;","import axios from 'axios';\r\n\r\nexport default {\r\n  /**\r\n   * 取得歐洲排行資料\r\n   */\r\n  getEruopeRankData() {\r\n    return axios.get(\"/api/Gacha/Rank/0\").then(res => res.data).catch(() => []);\r\n  },\r\n\r\n  /**\r\n   * 取得非洲排行資料\r\n   */\r\n  getAfricaRankData() {\r\n    return axios.get(\"/api/Gacha/Rank/1\").then(res => res.data).catch(() => []);\r\n  },\r\n\r\n  /**\r\n   * 取得Line機器人數據\r\n   */\r\n  getLineBotData() {\r\n    return axios.get(\"/api/Pudding/Statistics\").then(res => res.data).catch(() => {});\r\n  },\r\n\r\n  /**\r\n   * 取得用戶數據\r\n   */\r\n  getUserData() {\r\n    return axios.get(\"/api/My/Statistics\").then(res => res.data).catch(() => {});\r\n  },\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  Title,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\nimport StatisticsAPI from '../../api/Statistics';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SmsIcon from '@material-ui/icons/Sms';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  BoardCard: {\r\n    minWidth: 250,\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1),\r\n    [theme.breakpoints.down('sm')]: {\r\n      minWidth: theme.breakpoints.values\r\n    },\r\n  },\r\n\r\n  PaperChart: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  Information: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyle();\r\n  const isLoggedIn = window.liff.isLoggedIn();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    GuildCount: 0,\r\n    UserCount: 0,\r\n    CustomerOrderCount: 0,\r\n    TotalSpeakTimes: 0,\r\n    onlineCount: 0,\r\n    speakTimes: 0,\r\n    CollectedCount: 0,\r\n    Rank: 0,\r\n    MyGuildCount: 0,\r\n    MySpeakTimes: 0,\r\n  });\r\n\r\n  let passTS = new Date().getTime() - 60 * 1000;\r\n  let passDate = new Date(passTS);\r\n  let strDate = [\r\n    (\"0\" + passDate.getHours()).substr(-2),\r\n    (\"0\" + passDate.getMinutes()).substr(-2),\r\n    \"00\"\r\n  ].join(\":\");\r\n\r\n  const CardData = [\r\n    { title: \"即時線上人數\", value: data.onlineCount, icon: <DirectionsRunIcon />, updateDate: strDate },\r\n    { title: \"即時訊息數\", value: data.speakTimes, icon: <SmsIcon />, updateDate: strDate },\r\n    { title: \"伺服器群組數\", value: data.GuildCount, icon: <HomeIcon /> },\r\n    { title: \"伺服器用戶數\", value: data.UserCount, icon: <PersonIcon /> },\r\n    { title: \"伺服器自訂指令數\", value: data.CustomerOrderCount, icon: <MessageIcon /> },\r\n    { title: \"伺服器總訊息數\", value: data.TotalSpeakTimes, icon: <SmsIcon /> },\r\n  ];\r\n\r\n  if (isLoggedIn) {\r\n    CardData.unshift({\r\n      title: \"我的訊息次數\", value: data.MySpeakTimes, icon: <SmsIcon />,\r\n    });\r\n    CardData.unshift({\r\n      title: \"我的群組數\", value: data.MyGuildCount, icon: <HomeIcon />,\r\n    });\r\n    CardData.unshift({\r\n      title: \"轉蛋蒐集數量\", value: data.CollectedCount, icon: <StarIcon />,\r\n    });\r\n    CardData.unshift({\r\n      title: \"轉蛋蒐集排行\", value: data.Rank, icon: <StarIcon />,\r\n    });\r\n    CardData.unshift({\r\n      title: \"等級\", value: \"Lv ??\", icon: <StarIcon />,\r\n    });\r\n  }\r\n\r\n  const fetchStatistics = async () => {\r\n    var resp = await StatisticsAPI.getLineBotData();\r\n    var userResp = {};\r\n    if (isLoggedIn) {\r\n      userResp = await fetchUserStatistics();\r\n    }\r\n    setData({\r\n      ...data,\r\n      ...resp,\r\n      ...userResp,\r\n    });\r\n  };\r\n\r\n  const fetchUserStatistics = async () => {\r\n    var { GachaData, GuildData } = await StatisticsAPI.getUserData();\r\n    return {\r\n      ...GachaData,\r\n      MyGuildCount: GuildData.cnt,\r\n      MySpeakTimes: GuildData.times,\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStatistics().then(() => setLoading(false));\r\n    window.document.title = \"布丁首頁 - 儀表板\";\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        spacing={1}\r\n        container\r\n        justify=\"center\"\r\n      >\r\n        <Grid item sm={12} xs={12}>\r\n          <Alert className={classes.Information} severity=\"info\">最新公告：首頁已上線！</Alert>\r\n        </Grid>\r\n        {\r\n          isLoggedIn ? null : (\r\n            <Grid item sm={12} xs={12}>\r\n              <Alert className={classes.Information} severity=\"warning\">請按右上登入以取得更多資訊！</Alert>\r\n            </Grid>\r\n          )\r\n        }\r\n        {\r\n          CardData.map(data => (\r\n            <Grid item key={data.title}>\r\n              <BoardCard {...data} />\r\n            </Grid>\r\n          ))\r\n        }\r\n        <Grid item xs={12} sm={12}>\r\n          <EuropeRank />\r\n        </Grid>\r\n      </Grid>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress/>\r\n      </Backdrop>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nconst BoardCard = props => {\r\n  const classes = useStyle();\r\n  const { title, value, icon, updateDate } = props;\r\n  let date = new Date();\r\n  let showValue = \"\";\r\n\r\n  if (/^\\d+$/.test(value.toString())) {\r\n    showValue = unitNumber(value.toString());\r\n  } else {\r\n    showValue = value;\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.BoardCard}>\r\n      <CardHeader\r\n        avatar={icon}\r\n        title={title}\r\n        subheader={updateDate || [date.getFullYear(), date.getMonth() + 1, date.getDate()].join('/')}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"h3\" component=\"h3\">\r\n          {showValue}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nBoardCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  icon: PropTypes.object,\r\n  updateDate: PropTypes.string,\r\n};\r\n\r\nfunction unitNumber(strNumber) {\r\n  if (strNumber.length > 4) {\r\n    return (parseInt(strNumber) / 10000).toFixed(1) + \"萬\";\r\n  }\r\n\r\n  return strNumber;\r\n}\r\n\r\nconst EuropeRank = () => {\r\n  const classes = useStyle();\r\n  const [rankData, setRankData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    StatisticsAPI.getEruopeRankData().then(data => {\r\n      data.reverse();\r\n      setRankData(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className={classes.PaperChart}>\r\n      <Chart\r\n        data={rankData}\r\n        rotated\r\n      >\r\n        <ArgumentAxis />\r\n        <ValueAxis max={7} showLine showTicks />\r\n\r\n        <BarSeries\r\n          valueField=\"cnt\"\r\n          argumentField=\"displayName\"\r\n        />\r\n        <Title text=\"轉蛋蒐集排行\" />\r\n        <Animation />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport GroupRecord from './components/GroupRecord';\r\nimport CustomerOrder from './components/CustomerOrder';\r\nimport GroupConfig from './components/GroupConfig';\r\nimport GachaPool from './components/Admin/GachaPool';\r\nimport Message from './components/Admin/Message';\r\nimport Order from './components/Admin/Order';\r\nimport Home from './components/Home';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const { liff } = window;\r\n    axios\r\n      .get('/send-id')\r\n      .then(res => res.data)\r\n      .then(data => liff.init({ liffId: data.id }))\r\n      .then(() => {\r\n\r\n        if (liff.isLoggedIn()) {\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${liff.getAccessToken()}`;\r\n        }\r\n        setLoading(false);\r\n      })\r\n  }, []);\r\n\r\n  if (loading) return (\r\n    <Backdrop className={classes.backdrop} open={true}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <NavBar>\r\n          {needRedirect()}\r\n          <Switch>\r\n            <Route path='/Group/:groupId/Record' component={GroupRecord} />\r\n            <Route path='/Source/:sourceId/Customer/Orders' component={CustomerOrder} />\r\n            <Route path='/Group/:groupId/Config' component={GroupConfig} />\r\n            <Route path='/Admin/GachaPool' component={GachaPool} />\r\n            <Route path='/Admin/GlobalOrder' component={Order} />\r\n            <Route path='/Admin/Messages' component={Message} />\r\n            <Route path='/' component={Home} />\r\n          </Switch>\r\n        </NavBar>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction needRedirect() {\r\n  const objParam = new URLSearchParams(window.location.search);\r\n  if (objParam.has('reactRedirectUri') === false) return null;\r\n\r\n  return <Redirect to={objParam.get('reactRedirectUri')}></Redirect>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}