{"version":3,"sources":["components/NavBar.jsx","api/Group.js","components/GroupRecord/RecordTable.jsx","components/GroupRecord/index.jsx","api/CustomerOrder.js","components/CustomerOrder/OrderTable.jsx","components/CustomerOrder/index.jsx","components/GroupConfig/ConfigCard.jsx","components/GroupConfig/index.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","backgroundColor","menuButton","marginRight","spacing","title","doLogin","window","liff","login","redirectUri","location","origin","pathname","NavBar","classes","React","useState","isLoggedIn","setLoggedIn","AppBar","position","className","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","onClick","logout","token","fetchGroupSpeakRank","groupId","axios","get","fetchGroupConfig","fetchGroupConfigData","switchGroupConfig","name","status","put","headers","this","a","Group","result","genTableDatas","data","RowDatas","totalSpeakTimes","map","speakTimes","reduce","pre","curr","index","joinedDate","Date","joinedTS","speakDate","lastSpeakTS","no","displayName","lastSpeakDTM","getFullYear","getMonth","getDate","join","speakPercentage","Math","round","joinedDTM","RecordTable","props","columns","field","hidden","document","body","clientWidth","type","state","setState","useEffect","undefined","fetchSpeakRank","then","tableDatas","options","search","GroupRecord","match","useParams","Container","Box","m","Grid","container","direction","justify","item","Alert","severity","AlertTitle","xs","sourceId","orderData","method","url","StyledContainer","withStyles","padding","renderDetail","rowData","List","replies","selfAry","Fragment","key","ListItemText","primary","reply","secondary","length","Divider","component","CustomerOrder","orderDatas","hashReplies","forEach","orderKey","push","messageType","Object","keys","find","order","cusOrder","touchType","OrderTable","lookup","1","2","0","getOrderDatas","detailPanel","tooltip","render","localization","header","actions","editable","onRowUpdate","newData","oldData","dataUpdate","tableData","id","preState","card","minWeight","display","height","footer","marginTop","marginLeft","ConfigCard","setStatus","handle","CardContent","description","CardActions","Switch","checked","onChange","inputProps","disabled","Card","datas","config","chunks","parseInt","chunk","GridRow","sm","GroupConfig","GroupConfigData","Promise","all","GroupAPI","res","fetchData","style","backdrop","zIndex","drawer","App","loading","setLoading","init","liffId","Backdrop","open","CircularProgress","objParam","URLSearchParams","has","to","needRedirect","path","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"iVASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,gBAAiB,WAEnBC,WAAY,CACVC,YAAaL,EAAMM,QAAQ,IAE7BC,MAAO,CACLL,SAAU,OA2Bd,SAASM,IACPC,OAAOC,KAAKC,MAAM,CAACC,YAAY,GAAD,OAAIH,OAAOI,SAASC,OAApB,8BAAgDL,OAAOI,SAASE,YAOjFC,MA/BA,WACb,IAAMC,EAAUnB,IADG,EAEeoB,IAAMC,SAASV,OAAOC,KAAKU,cAF1C,mBAEZA,EAFY,KAEAC,EAFA,KAInB,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWP,EAAQhB,MAC3C,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQH,UAAWP,EAAQb,WAAYwB,MAAM,UAAUC,aAAW,QACjF,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWP,EAAQV,OAA5C,mBAIGa,EAEC,kBAACY,EAAA,EAAD,CAAQJ,MAAM,UAAUK,QAAS,WAY3CxB,OAAOC,KAAKwB,SAZkDb,GAAY,KAAhE,gBADA,kBAACW,EAAA,EAAD,CAAQJ,MAAM,UAAUK,QAASzB,GAAjC,mB,oICnCG,GACb2B,MAAQ,GAERC,oBAHa,SAGOC,GAClB,OAAOC,IAAMC,IAAN,qBAAwBF,EAAxB,iBAGTG,iBAPa,SAOIH,GACf,OAAOC,IAAMC,IAAN,qBAAwBF,EAAxB,aAMTI,qBAda,WAeX,OAAOH,IAAMC,IAAI,qBASnBG,kBAxBa,SAwBKL,EAASM,EAAMC,GAC/B,OAAON,IAAMO,IAAN,qBAAwBR,EAAxB,iBAAwCM,EAAxC,YAAgDC,GAAU,CAC/DE,QAAU,CACR,cAAgB,UAAhB,OAA2BC,KAAKZ,Y,4CCexC,WAA8BE,GAA9B,eAAAW,EAAA,sEACqBC,EAAMb,oBAAoBC,GAD/C,cACMa,EADN,yBAESC,EAAcD,EAAOE,OAF9B,4C,sBAUA,SAASD,EAAcE,GACrB,IAAIC,EAAkBD,EAASE,KAAI,SAAAH,GAAI,OAAIA,EAAKI,cAAYC,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,KAExF,OAAON,EAASE,KAAI,SAACH,EAAMQ,GACzB,IAAIC,EAAa,IAAIC,KAAKV,EAAKW,UAC3BC,EAAY,IAAIF,KAAKV,EAAKa,aAE9B,MAAO,CACLC,GAAIN,EAAQ,EACZjB,KAAMS,EAAKe,YACXX,WAAYJ,EAAKI,WACjBY,aAAmC,OAArBhB,EAAKa,YAAuB,IAAM,CAACD,EAAUK,cAAeL,EAAUM,WAAa,EAAGN,EAAUO,WAAWC,KAAK,KAC9HC,gBAAiBC,KAAKC,MAAMvB,EAAKI,WAAaF,EAAkB,KAAO,IACvEsB,UAAW,CAACf,EAAWQ,cAAeR,EAAWS,WAAa,EAAGT,EAAWU,WAAWC,KAAK,SAKnFK,MAnEK,SAACC,GAAW,IACtBzC,EAAYyC,EAAZzC,QADqB,EAEHlB,mBAAS,CACjC4D,QAAS,CACP,CAAExE,MAAO,eAAMyE,MAAO,MACtB,CAAEzE,MAAO,eAAMyE,MAAO,QACtB,CAAEzE,MAAO,2BAAQyE,MAAO,aAAcC,OAAQC,SAASC,KAAKC,aAAe,KAC3E,CAAE7E,MAAO,2BAAQyE,MAAO,mBACxB,CAAEzE,MAAO,2BAAQyE,MAAO,gBACxB,CAAEzE,MAAO,uCAAUyE,MAAO,YAAaK,KAAM,WAAYJ,OAAQC,SAASC,KAAKC,aAAe,MAEhGhC,KAAM,KAXqB,mBAEtBkC,EAFsB,KAEfC,EAFe,KAyB7B,OAXArE,IAAMsE,WAAU,gBAEEC,IAAZpD,G,2CAEJqD,CAAerD,GACZsD,MAAK,SAAAC,GAAU,OAAIL,EAAS,eACxBD,EADuB,CAE1BlC,KAAMwC,UAET,IAGD,kBAAC,IAAD,CACErF,MAAM,mDACNwE,QAASO,EAAMP,QACf3B,KAAMkC,EAAMlC,KACZyC,QAAS,CAAEC,QAAQ,MCIVC,EA9BK,WAClB,IAAIC,EAAQC,cAMZ,OAJA/E,IAAMsE,WAAU,WACd/E,OAAOyE,SAAS3E,MAAQ,yCACvB,IAGD,kBAAC2F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,gBAER,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACC,EAAA,EAAD,CAAOC,SAAS,QACd,kBAACC,EAAA,EAAD,iCACA,8HAIN,kBAACP,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMI,MAAI,EAACI,GAAI,IAAI,kBAAC,EAAD,CAAaxE,QAAS2D,EAAM3D,e,SC9B1C,WACDyE,GACV,OAAOxE,IAAMC,IAAN,sBAAyBuE,EAAzB,sBAFI,WAUDA,EAAUC,GACpB,OAAOzE,IAAM,CACX0E,OAAQ,MACR5D,KAAM2D,EACNE,IAAI,eAAD,OAAiBH,EAAjB,uB,kCCLHI,EAAkBC,YAAW,CACjClH,KAAM,CACJmH,QAAS,cAFWD,CAIrBjB,KAoDH,SAASmB,EAAaC,GACpB,OACE,kBAACJ,EAAD,KACE,kBAACpF,EAAA,EAAD,CAAYC,QAAQ,MAApB,4BACA,kBAACwF,EAAA,EAAD,KAEID,EAAQE,QAAQjE,KAAI,SAACH,EAAMQ,EAAO6D,GAAd,OAClB,kBAAC,IAAMC,SAAP,CAAgBC,IAAK/D,GACnB,kBAACgE,EAAA,EAAD,CACEC,QAASzE,EAAK0E,MACdC,UAAyB,SAAd3E,EAAKiC,KAAkB,eAAO,iBAE1CzB,EAAQ6D,EAAQO,OAAS,EAAI,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAU,W,4CAiBzE,WAA6BpB,GAA7B,qBAAA9D,EAAA,sEACmCmF,EAA0BrB,GAD7D,uBACcsB,EADd,EACQhF,KACFiF,EAAc,GAElBD,EAAWE,SAAQ,SAAAlF,GACjBiF,EAAYjF,EAAKmF,UAAYF,EAAYjF,EAAKmF,WAAa,GAC3DF,EAAYjF,EAAKmF,UAAUC,KAAK,CAAEnD,KAAMjC,EAAKqF,YAAaX,MAAO1E,EAAK0E,WAGpE5E,EAASwF,OAAOC,KAAKN,GAAa9E,KAAI,SAAAgF,GAAa,IAAD,EACtBH,EAAWQ,MAAK,SAAAxF,GAAI,OAAIA,EAAKmF,WAAaA,KACxE,MAAO,CACLM,MAHkD,EAC9CC,SAGJC,UAJkD,EACpCA,UAIdvB,QAASa,EAAYE,GACrB3F,OAAQ,EACR2F,eAhBN,kBAoBSrF,GApBT,4C,sBAuBe8F,MAtGI,SAAClE,GAAW,IACrBgC,EAAahC,EAAbgC,SADoB,EAEF3F,mBAAS,CACjC4D,QAAS,CACP,CAAExE,MAAO,eAAMyE,MAAO,SACtB,CAAEzE,MAAO,2BAAQyE,MAAO,YAAaiE,OAAQ,CAAEC,EAAG,2BAAQC,EAAG,mCAC7D,CAAE5I,MAAO,eAAMyE,MAAO,SAAUiE,OAAQ,CAAEG,EAAG,eAAMF,EAAG,iBACtD,CAAE3I,MAAO,eAAMyE,MAAO,UAAWC,QAAQ,GACzC,CAAE1E,MAAO,eAAMyE,MAAO,WAAYC,QAAQ,IAE5C7B,KAAM,KAVoB,mBAErBkC,EAFqB,KAEdC,EAFc,KAmB5B,OANAC,qBAAU,Y,4CACR6D,CAAcvC,GAAUnB,MAAK,SAAAzC,GAAM,OAAIqC,GAAS,SAAA7B,GAC9C,OAAO,eAAKA,EAAZ,CAAiBN,KAAMF,YAExB,IAGD,kBAAC,IAAD,CACE3C,MAAM,uCACNwE,QAASO,EAAMP,QACf3B,KAAMkC,EAAMlC,KACZyC,QAAS,CAAEC,QAAQ,GACnBwD,YAAa,CACX,CACEC,QAAS,iCACTC,OAAQnC,IAGZoC,aAAc,CACZC,OAAQ,CAAEC,QAAS,iBAErBC,SAAU,CACRC,YAAa,SAACC,EAASC,GACrB,IAAMC,EAAU,YAAO1E,EAAMlC,MACvBQ,EAAQmG,EAAQE,UAAUC,GAMhC,OALAF,EAAWpG,GAASkG,EACpBvE,GAAS,SAAA4E,GACP,OAAO,eAAKA,EAAZ,CAAsB/G,KAAK,YAAK4G,QAG3B7B,EAA0BrB,EAAUgD,QCnBtC3B,EAhCO,WACpB,IAAInC,EAAQC,cAMZ,OAJA/E,IAAMsE,WAAU,WACd/E,OAAOyE,SAAS3E,MAAQ,yCACvB,IAGD,kBAAC2F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,gBAER,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACC,EAAA,EAAD,CAAOC,SAAS,QACd,kBAACC,EAAA,EAAD,iCACA,wGACA,oHACA,qGAIN,kBAACP,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMI,MAAI,EAACI,GAAI,IAAI,kBAAC,EAAD,CAAYC,SAAUd,EAAMc,gB,qCCzBnDhH,GAAYC,aAAW,iBAAO,CAClCqK,KAAM,CACJC,UAAW,IACXC,QAAS,OACTC,OAAQ,QAEVC,OAAQ,CACNC,UAAW,OACXC,WAAY,YAID,SAASC,GAAW7F,GACjC,IAAM7D,EAAUnB,KADwB,EAEZoB,IAAMC,SAA0B,MAAjB2D,EAAMlC,QAFT,mBAEjCA,EAFiC,KAEzBgI,EAFyB,KAGhCjI,EAA6BmC,EAA7BnC,KAAMkI,EAAuB/F,EAAvB+F,OAAQzJ,EAAe0D,EAAf1D,WAOtB,OACE,kBAAC,IAAD,CAAMI,UAAWP,EAAQmJ,MACvB,kBAACU,EAAA,EAAD,KACE,kBAAChJ,EAAA,EAAD,CAAYC,QAAQ,KAAKmG,UAAU,MAChCpD,EAAMvE,OAET,kBAACuB,EAAA,EAAD,CAAYC,QAAQ,QAAQmG,UAAU,KACnCpD,EAAMiG,cAGX,kBAACC,EAAA,EAAD,CAAaxJ,UAAWP,EAAQuJ,QAC9B,kBAACS,GAAA,EAAD,CACEC,QAAStI,EACTuI,SAAU/J,EAlBG,WACnByJ,EAAOlI,GAAOC,GACdgI,GAAWhI,IAgBiC,aACtChB,MAAM,UACNe,KAAK,WACLyI,WAAY,CAAE,aAAc,oBAC5BC,UAAWjK,MCtCrB,IAAMtB,GAAYC,aAAW,iBAAO,CAClCE,KAAM,CACJC,SAAU,OAiDRoL,GAAO,SAAAxG,GAAU,IACbyG,EAAsCzG,EAAtCyG,MAAOC,EAA+B1G,EAA/B0G,OAAQX,EAAuB/F,EAAvB+F,OAAQzJ,EAAe0D,EAAf1D,WAE3BqK,EAAS,GAOb,OALAF,EAAMjD,SAAQ,SAAClF,EAAMQ,GACnB6H,EAAOC,SAAS9H,EAAM,IAAM6H,EAAOC,SAAS9H,EAAM,KAAO,GACzD6H,EAAOC,SAAS9H,EAAM,IAAI4E,KAAKpF,MAG1BqI,EAAOlI,KAAI,SAACoI,EAAO/H,GACxB,IAAMgI,EAAUD,EAAMpI,KAAI,SAACH,EAAMQ,GAAP,OACxB,kBAACyC,EAAA,EAAD,CAAMI,MAAI,EAACI,GAAI,GAAIgF,GAAI,EAAGlE,IAAK/D,GAC7B,kBAAC+G,GAAD,iBAAgBvH,EAAhB,CAAsBR,OAAQ4I,EAAOpI,EAAKT,MAAOkI,OAAQA,EAAQzJ,WAAYA,SAIjF,OACE,kBAACiF,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAACI,GAAI,GAAIvG,QAAS,EAAGqH,IAAK/D,GAC3CgI,OAaME,GA7EK,WAClB,IAAM7K,EAAUnB,KACVsB,EAAaX,OAAOC,KAAKU,aAFP,EAGEF,IAAMC,SAAS,CACvC4K,gBAAiB,GACjBD,YAAa,CAAC,OAAS,IAAI,kBAAoB,IAAI,cAAgB,OAL7C,mBAGjBxG,EAHiB,KAGVC,EAHU,KAShBlD,EADI4D,cACJ5D,QATgB,4CAWxB,kCAAAW,EAAA,sEAC+CgJ,QAAQC,IAAI,CACvDC,EAASzJ,uBAAuBkD,MAAK,SAAAwG,GAAG,OAAIA,EAAI/I,QAChD8I,EAAS1J,iBAAiBH,GAASsD,MAAK,SAAAwG,GAAG,OAAIA,EAAI/I,UAHvD,mCACS2I,EADT,KAC0BD,EAD1B,KAMEvG,EAAS,eACJD,EADG,CAENyG,gBAAiBA,EACjBD,YAAaA,KATjB,4CAXwB,sBA6BxB,OALA5K,IAAMsE,WAAU,WACd/E,OAAOyE,SAAS3E,MAAQ,uCAzBF,mCA0BtB6L,KACC,IAGD,kBAAClG,EAAA,EAAD,KACE,yBAAK1E,UAAWP,EAAQhB,KAAMoM,MAAO,CAAE5B,UAAY,KACjD,kBAACpE,EAAA,EAAD,CAAMC,WAAS,EAAChG,QAAS,GACtBc,EAAa,KAAO,kBAACiF,EAAA,EAAD,CAAMI,MAAI,GAAC,kBAACC,EAAA,EAAD,CAAOC,SAAS,WAAhB,iEAChC,kBAAC,GAAD,CAAM4E,MAAOjG,EAAMyG,gBAAiBP,OAAQlG,EAAMwG,YAAajB,OAMvE,SAAqBlI,EAAMC,GACzB,OAAOsJ,EAASxJ,kBAAkBL,EAASM,EAAMC,EAAS,EAAI,IAP4BxB,WAAYA,Q,oBCtCpGtB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsM,SAAU,CACRC,OAAQvM,EAAMuM,OAAOC,OAAS,EAC9B5K,MAAO,YA+CI6K,OA3Cf,WACE,IAAMxL,EAAUnB,KADH,EAEiBoB,IAAMC,UAAS,GAFhC,mBAENuL,EAFM,KAEGC,EAFH,KAab,OATAzL,IAAMsE,WAAU,WAAO,IACb9E,EAASD,OAATC,KACR4B,IACGC,IAAI,YACJoD,MAAK,SAAAwG,GAAG,OAAIA,EAAI/I,QAChBuC,MAAK,SAAAvC,GAAI,OAAI1C,EAAKkM,KAAK,CAAEC,OAAQzJ,EAAK8G,QACtCvE,MAAK,kBAAMgH,GAAW,QACxB,IAECD,EACF,kBAACI,GAAA,EAAD,CAAUtL,UAAWP,EAAQqL,SAAUS,MAAM,GAC3C,kBAACC,GAAA,EAAD,CAAkBpL,MAAM,aAO1B,kBAAC,IAAM8F,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KAYN,WACE,IAAMuF,EAAW,IAAIC,gBAAgBzM,OAAOI,SAASiF,QACrD,OAAyC,IAArCmH,EAASE,IAAI,oBAAsC,KAEhD,kBAAC,IAAD,CAAUC,GAAIH,EAAS1K,IAAI,sBAf3B8K,GACD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,yBAAyBpF,UAAWnC,IAChD,kBAAC,IAAD,CAAOuH,KAAK,oCAAoCpF,UAAWC,IAC3D,kBAAC,IAAD,CAAOmF,KAAK,yBAAyBpF,UAAW4D,SCpCtCyB,QACW,cAA7B9M,OAAOI,SAAS2M,UAEe,UAA7B/M,OAAOI,SAAS2M,UAEhB/M,OAAOI,SAAS2M,SAASxH,MACvB,2DCZNyH,IAASjE,OACP,kBAAC,IAAMkE,WAAP,KACE,kBAAC,GAAD,OAEFxI,SAASyI,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnI,MAAK,SAAAoI,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.eadaf013.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: '#00bcd4',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  const [isLoggedIn, setLoggedIn] = React.useState(window.liff.isLoggedIn()) ;\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Re:dive LineBot\r\n        </Typography>\r\n        {\r\n          !isLoggedIn\r\n          ? <Button color=\"inherit\" onClick={doLogin}>登入</Button>\r\n          : <Button color=\"inherit\" onClick={() => {doLogout(); setLoggedIn(false)}}>登出</Button>\r\n        }\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nfunction doLogin() {\r\n  window.liff.login({redirectUri:`${window.location.origin}/?reactRedirectUri=${window.location.pathname}`});\r\n}\r\n\r\nfunction doLogout() {\r\n  window.liff.logout();\r\n}\r\n\r\nexport default NavBar;","import axios from 'axios';\r\n\r\nexport default {\r\n  token : '',\r\n\r\n  fetchGroupSpeakRank(groupId) {\r\n    return axios.get(`/api/Group/${groupId}/Speak/Rank`);\r\n  },\r\n\r\n  fetchGroupConfig(groupId) {\r\n    return axios.get(`/api/Group/${groupId}/Config`);\r\n  },\r\n\r\n  /**\r\n   * 取得群組設定 文案\r\n   */\r\n  fetchGroupConfigData() {\r\n    return axios.get('/api/GroupConfig');\r\n  },\r\n\r\n  /**\r\n   * 群組設定功能開關\r\n   * @param {String} groupId\r\n   * @param {String} name\r\n   * @param {Number} status 1 : on, 0 : off\r\n   */\r\n  switchGroupConfig(groupId, name, status) {\r\n    return axios.put(`/api/Group/${groupId}/Name/${name}/${status}`, {\r\n      headers : {\r\n        'Authorization': `Bearer ${this.token}`\r\n      }\r\n    });\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Group from '../../api/Group';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RecordTable = (props) => {\r\n  const { groupId } = props;\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: '排名', field: 'no' },\r\n      { title: '姓名', field: 'name' },\r\n      { title: '說話次數', field: 'speakTimes', hidden: document.body.clientWidth <= 1000 },\r\n      { title: '說話占比', field: 'speakPercentage' },\r\n      { title: '上次說話', field: 'lastSpeakDTM' },\r\n      { title: '開始記錄時間', field: 'joinedDTM', type: 'datetime', hidden: document.body.clientWidth <= 1000 },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (groupId === undefined) return ;\r\n\r\n    fetchSpeakRank(groupId)\r\n      .then(tableDatas => setState({\r\n        ...state,\r\n        data: tableDatas,\r\n      }));\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"群組說話次數排行\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      options={{ search: false }}\r\n    />\r\n  );\r\n}\r\n\r\nRecordTable.propTypes = {\r\n  groupId: PropTypes.string,\r\n};\r\n\r\nasync function fetchSpeakRank(groupId) {\r\n  var result = await Group.fetchGroupSpeakRank(groupId);\r\n  return genTableDatas(result.data);\r\n}\r\n\r\n/**\r\n * 計算產生表格所需資料\r\n * @param  {Array} RowDatas\r\n * @return {Array} TableDatas\r\n */\r\nfunction genTableDatas(RowDatas) {\r\n  let totalSpeakTimes = RowDatas.map(data => data.speakTimes).reduce((pre, curr) => pre + curr);\r\n\r\n  return RowDatas.map((data, index) => {\r\n    let joinedDate = new Date(data.joinedTS);\r\n    let speakDate = new Date(data.lastSpeakTS);\r\n\r\n    return {\r\n      no: index + 1,\r\n      name: data.displayName,\r\n      speakTimes: data.speakTimes,\r\n      lastSpeakDTM: data.lastSpeakTS === null ? '-' : [speakDate.getFullYear(), speakDate.getMonth() + 1, speakDate.getDate()].join('/'),\r\n      speakPercentage: Math.round(data.speakTimes / totalSpeakTimes * 100) + '%',\r\n      joinedDTM: [joinedDate.getFullYear(), joinedDate.getMonth() + 1, joinedDate.getDate()].join('/'),\r\n    };\r\n  })\r\n}\r\n\r\nexport default RecordTable;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport RecordTable from './RecordTable';\r\n\r\nconst GroupRecord = () => {\r\n  let match = useParams();\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '群組說話排行';\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box m={2}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-around\"\r\n        >\r\n          <Grid item>\r\n            <Alert severity=\"info\">\r\n              <AlertTitle>注意事項</AlertTitle>\r\n              <li>每個月1號準時清除資料並重新統計</li>\r\n            </Alert>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={12}><RecordTable groupId={match.groupId}/></Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GroupRecord;","import axios from \"axios\";\r\n\r\nexport default {\r\n  fetchOrders(sourceId) {\r\n    return axios.get(`/api/Source/${sourceId}/Customer/Orders`);\r\n  },\r\n\r\n  /**\r\n   * 修改自訂指令\r\n   * @param {String} sourceId \r\n   * @param {Object} orderData \r\n   */\r\n  updateOrder(sourceId, orderData) {\r\n    return axios({\r\n      method: 'PUT',\r\n      data: orderData,\r\n      url: `/api/Source/${sourceId}/Customer/Orders`,\r\n    });\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport CustomerOrder from '../../api/CustomerOrder';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledContainer = withStyles({\r\n  root: {\r\n    padding: '10px 30px',\r\n  }\r\n})(Container);\r\n\r\nconst OrderTable = (props) => {\r\n  const { sourceId } = props;\r\n  const [state, setState] = useState({\r\n    columns: [\r\n      { title: '指令', field: 'order' },\r\n      { title: '觸發方式', field: 'touchType', lookup: { 1: '完全符合', 2: '關鍵字觸發' } },\r\n      { title: '狀態', field: 'status', lookup: { 0: '關閉', 1: '啟用' } },\r\n      { title: '回覆', field: 'replies', hidden: true },\r\n      { title: '金鑰', field: 'orderKey', hidden: true },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getOrderDatas(sourceId).then(result => setState(pre => {\r\n      return { ...pre, data: result };\r\n    }));\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"自訂指令列表\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      options={{ search: false }}\r\n      detailPanel={[\r\n        {\r\n          tooltip: '點我看詳細',\r\n          render: renderDetail,\r\n        }\r\n      ]}\r\n      localization={{\r\n        header: { actions: '編輯' }\r\n      }}\r\n      editable={{\r\n        onRowUpdate: (newData, oldData) => {\r\n          const dataUpdate = [...state.data];\r\n          const index = oldData.tableData.id;\r\n          dataUpdate[index] = newData;\r\n          setState(preState => {\r\n            return { ...preState, data: [...dataUpdate] }\r\n          });\r\n\r\n          return CustomerOrder.updateOrder(sourceId, newData);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderDetail(rowData) {\r\n  return (\r\n    <StyledContainer>\r\n      <Typography variant=\"h5\">回覆內容</Typography>\r\n      <List>\r\n        {\r\n          rowData.replies.map((data, index, selfAry) => (\r\n            <React.Fragment key={index}>\r\n              <ListItemText\r\n                primary={data.reply}\r\n                secondary={data.type === 'text' ? '文字' : '圖片'}\r\n              />\r\n              {index < selfAry.length - 1 ? <Divider component=\"li\" /> : null}\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n      </List>\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nOrderTable.propTypes = {\r\n  sourceId: PropTypes.string,\r\n};\r\n\r\n/**\r\n * 獲取自訂指令列表\r\n * @param {String} sourceId 來源ID\r\n */\r\nasync function getOrderDatas(sourceId) {\r\n  var { data: orderDatas } = await CustomerOrder.fetchOrders(sourceId);\r\n  var hashReplies = {};\r\n\r\n  orderDatas.forEach(data => {\r\n    hashReplies[data.orderKey] = hashReplies[data.orderKey] || [];\r\n    hashReplies[data.orderKey].push({ type: data.messageType, reply: data.reply });\r\n  });\r\n\r\n  var result = Object.keys(hashReplies).map(orderKey => {\r\n    let { cusOrder, touchType } = orderDatas.find(data => data.orderKey === orderKey);\r\n    return {\r\n      order: cusOrder,\r\n      touchType,\r\n      replies: hashReplies[orderKey],\r\n      status: 1,\r\n      orderKey,\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport default OrderTable;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport OrderTable from './OrderTable';\r\n\r\nconst CustomerOrder = () => {\r\n  let match = useParams();\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '自訂指令管理';\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box m={2}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-around\"\r\n        >\r\n          <Grid item>\r\n            <Alert severity=\"info\">\r\n              <AlertTitle>注意事項</AlertTitle>\r\n              <li>兩個月未觸發指令進行刪除</li>\r\n              <li>相同指令、回覆，無法重複新增</li>\r\n              <li>完全符合的指令優先觸發</li>\r\n            </Alert>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs={12}><OrderTable sourceId={match.sourceId} /></Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CustomerOrder;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    minWeight: 275,\r\n    display: \"grid\",\r\n    height: \"100%\",\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\",\r\n    marginLeft: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function ConfigCard(props) {\r\n  const classes = useStyles();\r\n  const [status, setStatus] = React.useState(props.status === 'Y');\r\n  const { name, handle, isLoggedIn } = props;\r\n\r\n  const handleChange = () => {\r\n    handle(name, !status);\r\n    setStatus(!status);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.footer}>\r\n        <Switch\r\n          checked={status}\r\n          onChange={isLoggedIn ? handleChange : function(){}}\r\n          color=\"primary\"\r\n          name=\"checkedB\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          disabled={!isLoggedIn}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nConfigCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  status: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  handle: PropTypes.func,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ConfigCard from './ConfigCard';\r\nimport Container from '@material-ui/core/Container';\r\nimport GroupAPI from '../../api/Group';\r\nimport { useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nconst GroupConfig = () => {\r\n  const classes = useStyles();\r\n  const isLoggedIn = window.liff.isLoggedIn();\r\n  const [state, setState] = React.useState({\r\n    GroupConfigData: [],\r\n    GroupConfig: {\"Battle\":\"Y\",\"PrincessCharacter\":\"Y\",\"CustomerOrder\":\"Y\"},\r\n  });\r\n\r\n  let match = useParams();\r\n  const { groupId } = match;\r\n\r\n  async function fetchData() {\r\n    const [GroupConfigData, GroupConfig] = await Promise.all([\r\n      GroupAPI.fetchGroupConfigData().then(res => res.data),\r\n      GroupAPI.fetchGroupConfig(groupId).then(res => res.data),\r\n    ]);\r\n\r\n    setState({\r\n      ...state,\r\n      GroupConfigData: GroupConfigData,\r\n      GroupConfig: GroupConfig,\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.document.title = '功能開關設定'\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.root} style={{ marginTop : 10 }}>\r\n        <Grid container spacing={1}>\r\n          {isLoggedIn ? null : <Grid item><Alert severity=\"warning\">登入後即可進行操作！</Alert></Grid> }\r\n          <Card datas={state.GroupConfigData} config={state.GroupConfig} handle={writeConfig} isLoggedIn={isLoggedIn} />\r\n        </Grid>\r\n      </div>\r\n    </Container>\r\n  );\r\n\r\n  function writeConfig(name, status) {\r\n    return GroupAPI.switchGroupConfig(groupId, name, status ? 1 : 0);\r\n  }\r\n};\r\n\r\nconst Card = props => {\r\n  const { datas, config, handle, isLoggedIn } = props;\r\n\r\n  var chunks = [];\r\n\r\n  datas.forEach((data, index) => {\r\n    chunks[parseInt(index/3)] = chunks[parseInt(index/3)] || [];\r\n    chunks[parseInt(index/3)].push(data);\r\n  });\r\n\r\n  return chunks.map((chunk, index) => {\r\n    const GridRow = chunk.map((data, index) => (\r\n      <Grid item xs={12} sm={4} key={index}>\r\n        <ConfigCard {...data} status={config[data.name]} handle={handle} isLoggedIn={isLoggedIn} />\r\n      </Grid>\r\n    ));\r\n\r\n    return (\r\n      <Grid container item xs={12} spacing={3} key={index}>\r\n        {GridRow}\r\n      </Grid>\r\n    );\r\n  });\r\n}\r\n\r\nCard.propTypes = {\r\n  datas: PropTypes.array,\r\n  config: PropTypes.object,\r\n  handle: PropTypes.func,\r\n  isLoggedIn: PropTypes.bool,\r\n};\r\n\r\nexport default GroupConfig;","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport GroupRecord from './components/GroupRecord';\r\nimport CustomerOrder from './components/CustomerOrder';\r\nimport GroupConfig from './components/GroupConfig';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const { liff } = window;\r\n    axios\r\n      .get('/send-id')\r\n      .then(res => res.data)\r\n      .then(data => liff.init({ liffId: data.id }))\r\n      .then(() => setLoading(false))\r\n  }, []);\r\n\r\n  if (loading) return (\r\n    <Backdrop className={classes.backdrop} open={true}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      <Router>\r\n        {needRedirect()}\r\n        <Switch>\r\n          <Route path='/Group/:groupId/Record' component={GroupRecord} />\r\n          <Route path='/Source/:sourceId/Customer/Orders' component={CustomerOrder} />\r\n          <Route path='/Group/:groupId/Config' component={GroupConfig} />\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction needRedirect() {\r\n  const objParam = new URLSearchParams(window.location.search);\r\n  if (objParam.has('reactRedirectUri') === false) return null ;\r\n\r\n  return <Redirect to={objParam.get('reactRedirectUri')}></Redirect> ;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}