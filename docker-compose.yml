version: "3.5"
services:
  nginx-proxy:
    restart: always
    container_name: nginx-proxy
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "vhost:/etc/nginx/vhost.d"
      - "html:/usr/share/nginx/html"
      - "certs:/etc/nginx/certs:ro"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "dhparam:/etc/nginx/dhparam"
    environment:
      - DEFAULT_HOST=${APP_DOMAIN}
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  nginx-proxy-letsencrypt:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    depends_on:
      - nginx-proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "vhost:/etc/nginx/vhost.d"
      - "html:/usr/share/nginx/html"
      - "certs:/etc/nginx/certs:rw"
    environment:
      - "NGINX_PROXY_CONTAINER=nginx_proxy"

  app:
    build: ./app
    links:
      - mysql
      - redis
    env_file: ./.env
    restart: always
    ports:
      - "5000"
    environment:
      - "VIRTUAL_HOST=${APP_DOMAIN}"
      - "VIRTUAL_NETWORK=nginx-proxy"
      - "VIRTUAL_PORT=5000"
      - "LETSENCRYPT_HOST=${APP_DOMAIN}"
      - "LETSENCRYPT_EMAIL=${ADMIN_EMAIL}"

  mysql:
    env_file: ./.env
    image: mysql
    container_name: mysql
    volumes:
      - ./migration:/docker-entrypoint-initdb.d
      - "${DB_STOREPATH}/db:/var/lib/mysql"
    restart: always
    ports:
      - "${DB_PORT}:3306"
    environment:
      "MYSQL_DATABASE": "${DB_DATABASE}"
      "MYSQL_USER": "${DB_USER}"
      "MYSQL_PASSWORD": "${DB_USER_PASSWORD}"
      "MYSQL_ROOT_PASSWORD": "${DB_PASSWORD}"

  redis:
    image: redis:alpine
    container_name: redis
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    restart: always
    ports:
      - "${REDIS_PORT}:6379"

  crontab:
    build: ./job
    container_name: redive_crontab
    links:
      - mysql
      - redis
    env_file: ./.env

volumes:
  certs:
  vhost:
  html:
  dhparam: